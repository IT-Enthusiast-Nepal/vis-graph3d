{"version":3,"file":"vis-graph3d.min.js","sources":["../../lib/graph3d/Point3d.js","../../lib/graph3d/Point2d.js","../../lib/graph3d/Slider.js","../../lib/graph3d/StepNumber.js","../../lib/graph3d/Camera.js","../../lib/graph3d/Settings.js","../../lib/graph3d/options.js","../../lib/graph3d/Range.js","../../lib/graph3d/Filter.js","../../lib/graph3d/DataGroup.js","../../lib/graph3d/Graph3d.js"],"sourcesContent":["/**\n * @param {number} [x]\n * @param {number} [y]\n * @param {number} [z]\n */\nfunction Point3d(x, y, z) {\n  this.x = x !== undefined ? x : 0;\n  this.y = y !== undefined ? y : 0;\n  this.z = z !== undefined ? z : 0;\n}\n\n/**\n * Subtract the two provided points, returns a-b\n *\n * @param {Point3d} a\n * @param {Point3d} b\n * @returns {Point3d} a-b\n */\nPoint3d.subtract = function (a, b) {\n  const sub = new Point3d();\n  sub.x = a.x - b.x;\n  sub.y = a.y - b.y;\n  sub.z = a.z - b.z;\n  return sub;\n};\n\n/**\n * Add the two provided points, returns a+b\n *\n * @param {Point3d} a\n * @param {Point3d} b\n * @returns {Point3d} a+b\n */\nPoint3d.add = function (a, b) {\n  const sum = new Point3d();\n  sum.x = a.x + b.x;\n  sum.y = a.y + b.y;\n  sum.z = a.z + b.z;\n  return sum;\n};\n\n/**\n * Calculate the average of two 3d points\n *\n * @param {Point3d} a\n * @param {Point3d} b\n * @returns {Point3d} The average, (a+b)/2\n */\nPoint3d.avg = function (a, b) {\n  return new Point3d((a.x + b.x) / 2, (a.y + b.y) / 2, (a.z + b.z) / 2);\n};\n\n/**\n * Scale the provided point by a scalar, returns p*c\n *\n * @param {Point3d} p\n * @param {number} c\n * @returns {Point3d} p*c\n */\nPoint3d.scalarProduct = function (p, c) {\n  return new Point3d(p.x * c, p.y * c, p.z * c);\n};\n\n/**\n * Calculate the dot product of the two provided points, returns a.b\n * Documentation: http://en.wikipedia.org/wiki/Dot_product\n *\n * @param {Point3d} a\n * @param {Point3d} b\n * @returns {Point3d} dot product a.b\n */\nPoint3d.dotProduct = function (a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z;\n};\n\n/**\n * Calculate the cross product of the two provided points, returns axb\n * Documentation: http://en.wikipedia.org/wiki/Cross_product\n *\n * @param {Point3d} a\n * @param {Point3d} b\n * @returns {Point3d} cross product axb\n */\nPoint3d.crossProduct = function (a, b) {\n  const crossproduct = new Point3d();\n\n  crossproduct.x = a.y * b.z - a.z * b.y;\n  crossproduct.y = a.z * b.x - a.x * b.z;\n  crossproduct.z = a.x * b.y - a.y * b.x;\n\n  return crossproduct;\n};\n\n/**\n * Retrieve the length of the vector (or the distance from this point to the origin\n *\n * @returns {number}  length\n */\nPoint3d.prototype.length = function () {\n  return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n};\n\n/**\n * Return a normalized vector pointing in the same direction.\n *\n * @returns {Point3d}  normalized\n */\nPoint3d.prototype.normalize = function () {\n  return Point3d.scalarProduct(this, 1 / this.length());\n};\n\nmodule.exports = Point3d;\n","/**\n * @param {number} [x]\n * @param {number} [y]\n */\nfunction Point2d(x, y) {\n  this.x = x !== undefined ? x : 0;\n  this.y = y !== undefined ? y : 0;\n}\n\nmodule.exports = Point2d;\n","import * as util from \"vis-util/esnext\";\n\n/**\n * An html slider control with start/stop/prev/next buttons\n *\n * @function Object() { [native code] } Slider\n * @param {Element} container  The element where the slider will be created\n * @param {object} options   Available options:\n *                 {boolean} visible   If true (default) the\n *                           slider is visible.\n */\nfunction Slider(container, options) {\n  if (container === undefined) {\n    throw new Error(\"No container element defined\");\n  }\n  this.container = container;\n  this.visible =\n    options && options.visible != undefined ? options.visible : true;\n\n  if (this.visible) {\n    this.frame = document.createElement(\"DIV\");\n    //this.frame.style.backgroundColor = '#E5E5E5';\n    this.frame.style.width = \"100%\";\n    this.frame.style.position = \"relative\";\n    this.container.appendChild(this.frame);\n\n    this.frame.prev = document.createElement(\"INPUT\");\n    this.frame.prev.type = \"BUTTON\";\n    this.frame.prev.value = \"Prev\";\n    this.frame.appendChild(this.frame.prev);\n\n    this.frame.play = document.createElement(\"INPUT\");\n    this.frame.play.type = \"BUTTON\";\n    this.frame.play.value = \"Play\";\n    this.frame.appendChild(this.frame.play);\n\n    this.frame.next = document.createElement(\"INPUT\");\n    this.frame.next.type = \"BUTTON\";\n    this.frame.next.value = \"Next\";\n    this.frame.appendChild(this.frame.next);\n\n    this.frame.bar = document.createElement(\"INPUT\");\n    this.frame.bar.type = \"BUTTON\";\n    this.frame.bar.style.position = \"absolute\";\n    this.frame.bar.style.border = \"1px solid red\";\n    this.frame.bar.style.width = \"100px\";\n    this.frame.bar.style.height = \"6px\";\n    this.frame.bar.style.borderRadius = \"2px\";\n    this.frame.bar.style.MozBorderRadius = \"2px\";\n    this.frame.bar.style.border = \"1px solid #7F7F7F\";\n    this.frame.bar.style.backgroundColor = \"#E5E5E5\";\n    this.frame.appendChild(this.frame.bar);\n\n    this.frame.slide = document.createElement(\"INPUT\");\n    this.frame.slide.type = \"BUTTON\";\n    this.frame.slide.style.margin = \"0px\";\n    this.frame.slide.value = \" \";\n    this.frame.slide.style.position = \"relative\";\n    this.frame.slide.style.left = \"-100px\";\n    this.frame.appendChild(this.frame.slide);\n\n    // create events\n    const me = this;\n    this.frame.slide.onmousedown = function (event) {\n      me._onMouseDown(event);\n    };\n    this.frame.prev.onclick = function (event) {\n      me.prev(event);\n    };\n    this.frame.play.onclick = function (event) {\n      me.togglePlay(event);\n    };\n    this.frame.next.onclick = function (event) {\n      me.next(event);\n    };\n  }\n\n  this.onChangeCallback = undefined;\n\n  this.values = [];\n  this.index = undefined;\n\n  this.playTimeout = undefined;\n  this.playInterval = 1000; // milliseconds\n  this.playLoop = true;\n}\n\n/**\n * Select the previous index\n */\nSlider.prototype.prev = function () {\n  let index = this.getIndex();\n  if (index > 0) {\n    index--;\n    this.setIndex(index);\n  }\n};\n\n/**\n * Select the next index\n */\nSlider.prototype.next = function () {\n  let index = this.getIndex();\n  if (index < this.values.length - 1) {\n    index++;\n    this.setIndex(index);\n  }\n};\n\n/**\n * Select the next index\n */\nSlider.prototype.playNext = function () {\n  const start = new Date();\n\n  let index = this.getIndex();\n  if (index < this.values.length - 1) {\n    index++;\n    this.setIndex(index);\n  } else if (this.playLoop) {\n    // jump to the start\n    index = 0;\n    this.setIndex(index);\n  }\n\n  const end = new Date();\n  const diff = end - start;\n\n  // calculate how much time it to to set the index and to execute the callback\n  // function.\n  const interval = Math.max(this.playInterval - diff, 0);\n  // document.title = diff // TODO: cleanup\n\n  const me = this;\n  this.playTimeout = setTimeout(function () {\n    me.playNext();\n  }, interval);\n};\n\n/**\n * Toggle start or stop playing\n */\nSlider.prototype.togglePlay = function () {\n  if (this.playTimeout === undefined) {\n    this.play();\n  } else {\n    this.stop();\n  }\n};\n\n/**\n * Start playing\n */\nSlider.prototype.play = function () {\n  // Test whether already playing\n  if (this.playTimeout) return;\n\n  this.playNext();\n\n  if (this.frame) {\n    this.frame.play.value = \"Stop\";\n  }\n};\n\n/**\n * Stop playing\n */\nSlider.prototype.stop = function () {\n  clearInterval(this.playTimeout);\n  this.playTimeout = undefined;\n\n  if (this.frame) {\n    this.frame.play.value = \"Play\";\n  }\n};\n\n/**\n * Set a callback function which will be triggered when the value of the\n * slider bar has changed.\n *\n * @param {Function} callback\n */\nSlider.prototype.setOnChangeCallback = function (callback) {\n  this.onChangeCallback = callback;\n};\n\n/**\n * Set the interval for playing the list\n *\n * @param {number} interval   The interval in milliseconds\n */\nSlider.prototype.setPlayInterval = function (interval) {\n  this.playInterval = interval;\n};\n\n/**\n * Retrieve the current play interval\n *\n * @returns {number} interval   The interval in milliseconds\n */\nSlider.prototype.getPlayInterval = function () {\n  return this.playInterval;\n};\n\n/**\n * Set looping on or off\n *\n * @param {boolean} doLoop  If true, the slider will jump to the start when\n *               the end is passed, and will jump to the end\n *               when the start is passed.\n */\nSlider.prototype.setPlayLoop = function (doLoop) {\n  this.playLoop = doLoop;\n};\n\n/**\n * Execute the onchange callback function\n */\nSlider.prototype.onChange = function () {\n  if (this.onChangeCallback !== undefined) {\n    this.onChangeCallback();\n  }\n};\n\n/**\n * redraw the slider on the correct place\n */\nSlider.prototype.redraw = function () {\n  if (this.frame) {\n    // resize the bar\n    this.frame.bar.style.top =\n      this.frame.clientHeight / 2 - this.frame.bar.offsetHeight / 2 + \"px\";\n    this.frame.bar.style.width =\n      this.frame.clientWidth -\n      this.frame.prev.clientWidth -\n      this.frame.play.clientWidth -\n      this.frame.next.clientWidth -\n      30 +\n      \"px\";\n\n    // position the slider button\n    const left = this.indexToLeft(this.index);\n    this.frame.slide.style.left = left + \"px\";\n  }\n};\n\n/**\n * Set the list with values for the slider\n *\n * @param {Array} values   A javascript array with values (any type)\n */\nSlider.prototype.setValues = function (values) {\n  this.values = values;\n\n  if (this.values.length > 0) this.setIndex(0);\n  else this.index = undefined;\n};\n\n/**\n * Select a value by its index\n *\n * @param {number} index\n */\nSlider.prototype.setIndex = function (index) {\n  if (index < this.values.length) {\n    this.index = index;\n\n    this.redraw();\n    this.onChange();\n  } else {\n    throw new Error(\"Index out of range\");\n  }\n};\n\n/**\n * retrieve the index of the currently selected vaue\n *\n * @returns {number} index\n */\nSlider.prototype.getIndex = function () {\n  return this.index;\n};\n\n/**\n * retrieve the currently selected value\n *\n * @returns {*} value\n */\nSlider.prototype.get = function () {\n  return this.values[this.index];\n};\n\nSlider.prototype._onMouseDown = function (event) {\n  // only react on left mouse button down\n  const leftButtonDown = event.which ? event.which === 1 : event.button === 1;\n  if (!leftButtonDown) return;\n\n  this.startClientX = event.clientX;\n  this.startSlideX = parseFloat(this.frame.slide.style.left);\n\n  this.frame.style.cursor = \"move\";\n\n  // add event listeners to handle moving the contents\n  // we store the function onmousemove and onmouseup in the graph, so we can\n  // remove the eventlisteners lateron in the function mouseUp()\n  const me = this;\n  this.onmousemove = function (event) {\n    me._onMouseMove(event);\n  };\n  this.onmouseup = function (event) {\n    me._onMouseUp(event);\n  };\n  util.addEventListener(document, \"mousemove\", this.onmousemove);\n  util.addEventListener(document, \"mouseup\", this.onmouseup);\n  util.preventDefault(event);\n};\n\nSlider.prototype.leftToIndex = function (left) {\n  const width =\n    parseFloat(this.frame.bar.style.width) - this.frame.slide.clientWidth - 10;\n  const x = left - 3;\n\n  let index = Math.round((x / width) * (this.values.length - 1));\n  if (index < 0) index = 0;\n  if (index > this.values.length - 1) index = this.values.length - 1;\n\n  return index;\n};\n\nSlider.prototype.indexToLeft = function (index) {\n  const width =\n    parseFloat(this.frame.bar.style.width) - this.frame.slide.clientWidth - 10;\n\n  const x = (index / (this.values.length - 1)) * width;\n  const left = x + 3;\n\n  return left;\n};\n\nSlider.prototype._onMouseMove = function (event) {\n  const diff = event.clientX - this.startClientX;\n  const x = this.startSlideX + diff;\n\n  const index = this.leftToIndex(x);\n\n  this.setIndex(index);\n\n  util.preventDefault();\n};\n\nSlider.prototype._onMouseUp = function () {\n   \n  this.frame.style.cursor = \"auto\";\n\n  // remove event listeners\n  util.removeEventListener(document, \"mousemove\", this.onmousemove);\n  util.removeEventListener(document, \"mouseup\", this.onmouseup);\n\n  util.preventDefault();\n};\n\nexport default Slider;\n","/**\n * The class StepNumber is an iterator for Numbers. You provide a start and end\n * value, and a best step size. StepNumber itself rounds to fixed values and\n * a finds the step that best fits the provided step.\n *\n * If prettyStep is true, the step size is chosen as close as possible to the\n * provided step, but being a round value like 1, 2, 5, 10, 20, 50, ....\n *\n * Example usage:\n *   var step = new StepNumber(0, 10, 2.5, true);\n *   step.start();\n *   while (!step.end()) {\n *   alert(step.getCurrent());\n *   step.next();\n *   }\n *\n * Version: 1.0\n * @param {number} start     The start value\n * @param {number} end     The end value\n * @param {number} step    Optional. Step size. Must be a positive value.\n * @param {boolean} prettyStep Optional. If true, the step size is rounded\n *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)\n */\nfunction StepNumber(start, end, step, prettyStep) {\n  // set default values\n  this._start = 0;\n  this._end = 0;\n  this._step = 1;\n  this.prettyStep = true;\n  this.precision = 5;\n\n  this._current = 0;\n  this.setRange(start, end, step, prettyStep);\n}\n\n/**\n * Check for input values, to prevent disasters from happening\n *\n * Source: http://stackoverflow.com/a/1830844\n *\n * @param {string} n\n * @returns {boolean}\n */\nStepNumber.prototype.isNumeric = function (n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\n/**\n * Set a new range: start, end and step.\n *\n * @param {number} start     The start value\n * @param {number} end     The end value\n * @param {number} step    Optional. Step size. Must be a positive value.\n * @param {boolean} prettyStep Optional. If true, the step size is rounded\n *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)\n */\nStepNumber.prototype.setRange = function (start, end, step, prettyStep) {\n  if (!this.isNumeric(start)) {\n    throw new Error(\"Parameter 'start' is not numeric; value: \" + start);\n  }\n  if (!this.isNumeric(end)) {\n    throw new Error(\"Parameter 'end' is not numeric; value: \" + start);\n  }\n  if (!this.isNumeric(step)) {\n    throw new Error(\"Parameter 'step' is not numeric; value: \" + start);\n  }\n\n  this._start = start ? start : 0;\n  this._end = end ? end : 0;\n\n  this.setStep(step, prettyStep);\n};\n\n/**\n * Set a new step size\n *\n * @param {number} step    New step size. Must be a positive value\n * @param {boolean} prettyStep Optional. If true, the provided step is rounded\n *               to a pretty step size (like 1, 2, 5, 10, 20, 50, ...)\n */\nStepNumber.prototype.setStep = function (step, prettyStep) {\n  if (step === undefined || step <= 0) return;\n\n  if (prettyStep !== undefined) this.prettyStep = prettyStep;\n\n  if (this.prettyStep === true)\n    this._step = StepNumber.calculatePrettyStep(step);\n  else this._step = step;\n};\n\n/**\n * Calculate a nice step size, closest to the desired step size.\n * Returns a value in one of the ranges 1*10^n, 2*10^n, or 5*10^n, where n is an\n * integer Number. For example 1, 2, 5, 10, 20, 50, etc...\n *\n * @param {number}  step  Desired step size\n * @returns {number}     Nice step size\n */\nStepNumber.calculatePrettyStep = function (step) {\n  const log10 = function (x) {\n    return Math.log(x) / Math.LN10;\n  };\n\n  // try three steps (multiple of 1, 2, or 5\n  const step1 = Math.pow(10, Math.round(log10(step))),\n    step2 = 2 * Math.pow(10, Math.round(log10(step / 2))),\n    step5 = 5 * Math.pow(10, Math.round(log10(step / 5)));\n\n  // choose the best step (closest to minimum step)\n  let prettyStep = step1;\n  if (Math.abs(step2 - step) <= Math.abs(prettyStep - step)) prettyStep = step2;\n  if (Math.abs(step5 - step) <= Math.abs(prettyStep - step)) prettyStep = step5;\n\n  // for safety\n  if (prettyStep <= 0) {\n    prettyStep = 1;\n  }\n\n  return prettyStep;\n};\n\n/**\n * returns the current value of the step\n *\n * @returns {number} current value\n */\nStepNumber.prototype.getCurrent = function () {\n  return parseFloat(this._current.toPrecision(this.precision));\n};\n\n/**\n * returns the current step size\n *\n * @returns {number} current step size\n */\nStepNumber.prototype.getStep = function () {\n  return this._step;\n};\n\n/**\n * Set the current to its starting value.\n *\n * By default, this will be the largest value smaller than start, which\n * is a multiple of the step size.\n *\n * Parameters checkFirst is optional, default false.\n * If set to true, move the current value one step if smaller than start.\n *\n * @param {boolean} [checkFirst=false]\n */\nStepNumber.prototype.start = function (checkFirst) {\n  if (checkFirst === undefined) {\n    checkFirst = false;\n  }\n\n  this._current = this._start - (this._start % this._step);\n\n  if (checkFirst) {\n    if (this.getCurrent() < this._start) {\n      this.next();\n    }\n  }\n};\n\n/**\n * Do a step, add the step size to the current value\n */\nStepNumber.prototype.next = function () {\n  this._current += this._step;\n};\n\n/**\n * Returns true whether the end is reached\n *\n * @returns {boolean}  True if the current value has passed the end value.\n */\nStepNumber.prototype.end = function () {\n  return this._current > this._end;\n};\n\nmodule.exports = StepNumber;\n","import Point3d from \"./Point3d\";\n\n/**\n * The camera is mounted on a (virtual) camera arm. The camera arm can rotate\n * The camera is always looking in the direction of the origin of the arm.\n * This way, the camera always rotates around one fixed point, the location\n * of the camera arm.\n *\n * Documentation:\n *   http://en.wikipedia.org/wiki/3D_projection\n *\n * @class Camera\n */\nfunction Camera() {\n  this.armLocation = new Point3d();\n  this.armRotation = {};\n  this.armRotation.horizontal = 0;\n  this.armRotation.vertical = 0;\n  this.armLength = 1.7;\n  this.cameraOffset = new Point3d();\n  this.offsetMultiplier = 0.6;\n\n  this.cameraLocation = new Point3d();\n  this.cameraRotation = new Point3d(0.5 * Math.PI, 0, 0);\n\n  this.calculateCameraOrientation();\n}\n\n/**\n * Set offset camera in camera coordinates\n *\n * @param {number} x offset by camera horisontal\n * @param {number} y offset by camera vertical\n */\nCamera.prototype.setOffset = function (x, y) {\n  const abs = Math.abs,\n    sign = Math.sign,\n    mul = this.offsetMultiplier,\n    border = this.armLength * mul;\n\n  if (abs(x) > border) {\n    x = sign(x) * border;\n  }\n  if (abs(y) > border) {\n    y = sign(y) * border;\n  }\n  this.cameraOffset.x = x;\n  this.cameraOffset.y = y;\n  this.calculateCameraOrientation();\n};\n\n/**\n * Get camera offset by horizontal and vertical\n *\n * @returns {number}\n */\nCamera.prototype.getOffset = function () {\n  return this.cameraOffset;\n};\n\n/**\n * Set the location (origin) of the arm\n *\n * @param {number} x  Normalized value of x\n * @param {number} y  Normalized value of y\n * @param {number} z  Normalized value of z\n */\nCamera.prototype.setArmLocation = function (x, y, z) {\n  this.armLocation.x = x;\n  this.armLocation.y = y;\n  this.armLocation.z = z;\n\n  this.calculateCameraOrientation();\n};\n\n/**\n * Set the rotation of the camera arm\n *\n * @param {number} horizontal   The horizontal rotation, between 0 and 2*PI.\n *                Optional, can be left undefined.\n * @param {number} vertical   The vertical rotation, between 0 and 0.5*PI\n *                if vertical=0.5*PI, the graph is shown from the\n *                top. Optional, can be left undefined.\n */\nCamera.prototype.setArmRotation = function (horizontal, vertical) {\n  if (horizontal !== undefined) {\n    this.armRotation.horizontal = horizontal;\n  }\n\n  if (vertical !== undefined) {\n    this.armRotation.vertical = vertical;\n    if (this.armRotation.vertical < 0) this.armRotation.vertical = 0;\n    if (this.armRotation.vertical > 0.5 * Math.PI)\n      this.armRotation.vertical = 0.5 * Math.PI;\n  }\n\n  if (horizontal !== undefined || vertical !== undefined) {\n    this.calculateCameraOrientation();\n  }\n};\n\n/**\n * Retrieve the current arm rotation\n *\n * @returns {object}   An object with parameters horizontal and vertical\n */\nCamera.prototype.getArmRotation = function () {\n  const rot = {};\n  rot.horizontal = this.armRotation.horizontal;\n  rot.vertical = this.armRotation.vertical;\n\n  return rot;\n};\n\n/**\n * Set the (normalized) length of the camera arm.\n *\n * @param {number} length A length between 0.71 and 5.0\n */\nCamera.prototype.setArmLength = function (length) {\n  if (length === undefined) return;\n\n  this.armLength = length;\n\n  // Radius must be larger than the corner of the graph,\n  // which has a distance of sqrt(0.5^2+0.5^2) = 0.71 from the center of the\n  // graph\n  if (this.armLength < 0.71) this.armLength = 0.71;\n  if (this.armLength > 5.0) this.armLength = 5.0;\n\n  this.setOffset(this.cameraOffset.x, this.cameraOffset.y);\n  this.calculateCameraOrientation();\n};\n\n/**\n * Retrieve the arm length\n *\n * @returns {number} length\n */\nCamera.prototype.getArmLength = function () {\n  return this.armLength;\n};\n\n/**\n * Retrieve the camera location\n *\n * @returns {Point3d} cameraLocation\n */\nCamera.prototype.getCameraLocation = function () {\n  return this.cameraLocation;\n};\n\n/**\n * Retrieve the camera rotation\n *\n * @returns {Point3d} cameraRotation\n */\nCamera.prototype.getCameraRotation = function () {\n  return this.cameraRotation;\n};\n\n/**\n * Calculate the location and rotation of the camera based on the\n * position and orientation of the camera arm\n */\nCamera.prototype.calculateCameraOrientation = function () {\n  // calculate location of the camera\n  this.cameraLocation.x =\n    this.armLocation.x -\n    this.armLength *\n      Math.sin(this.armRotation.horizontal) *\n      Math.cos(this.armRotation.vertical);\n  this.cameraLocation.y =\n    this.armLocation.y -\n    this.armLength *\n      Math.cos(this.armRotation.horizontal) *\n      Math.cos(this.armRotation.vertical);\n  this.cameraLocation.z =\n    this.armLocation.z + this.armLength * Math.sin(this.armRotation.vertical);\n\n  // calculate rotation of the camera\n  this.cameraRotation.x = Math.PI / 2 - this.armRotation.vertical;\n  this.cameraRotation.y = 0;\n  this.cameraRotation.z = -this.armRotation.horizontal;\n\n  const xa = this.cameraRotation.x;\n  const za = this.cameraRotation.z;\n  const dx = this.cameraOffset.x;\n  const dy = this.cameraOffset.y;\n  const sin = Math.sin,\n    cos = Math.cos;\n\n  this.cameraLocation.x =\n    this.cameraLocation.x + dx * cos(za) + dy * -sin(za) * cos(xa);\n  this.cameraLocation.y =\n    this.cameraLocation.y + dx * sin(za) + dy * cos(za) * cos(xa);\n  this.cameraLocation.z = this.cameraLocation.z + dy * sin(xa);\n};\n\nexport default Camera;\n","////////////////////////////////////////////////////////////////////////////////\n// This modules handles the options for Graph3d.\n//\n////////////////////////////////////////////////////////////////////////////////\nimport * as util from \"vis-util/esnext\";\nimport Camera from \"./Camera\";\nimport Point3d from \"./Point3d\";\n\n// enumerate the available styles\nconst STYLE = {\n  BAR: 0,\n  BARCOLOR: 1,\n  BARSIZE: 2,\n  DOT: 3,\n  DOTLINE: 4,\n  DOTCOLOR: 5,\n  DOTSIZE: 6,\n  GRID: 7,\n  LINE: 8,\n  SURFACE: 9,\n};\n\n// The string representations of the styles\nconst STYLENAME = {\n  dot: STYLE.DOT,\n  \"dot-line\": STYLE.DOTLINE,\n  \"dot-color\": STYLE.DOTCOLOR,\n  \"dot-size\": STYLE.DOTSIZE,\n  line: STYLE.LINE,\n  grid: STYLE.GRID,\n  surface: STYLE.SURFACE,\n  bar: STYLE.BAR,\n  \"bar-color\": STYLE.BARCOLOR,\n  \"bar-size\": STYLE.BARSIZE,\n};\n\n/**\n * Field names in the options hash which are of relevance to the user.\n *\n * Specifically, these are the fields which require no special handling,\n * and can be directly copied over.\n */\nconst OPTIONKEYS = [\n  \"width\",\n  \"height\",\n  \"filterLabel\",\n  \"legendLabel\",\n  \"xLabel\",\n  \"yLabel\",\n  \"zLabel\",\n  \"xValueLabel\",\n  \"yValueLabel\",\n  \"zValueLabel\",\n  \"showXAxis\",\n  \"showYAxis\",\n  \"showZAxis\",\n  \"showGrayBottom\",\n  \"showGrid\",\n  \"showPerspective\",\n  \"showShadow\",\n  \"showSurfaceGrid\",\n  \"keepAspectRatio\",\n  \"rotateAxisLabels\",\n  \"verticalRatio\",\n  \"dotSizeRatio\",\n  \"dotSizeMinFraction\",\n  \"dotSizeMaxFraction\",\n  \"showAnimationControls\",\n  \"animationInterval\",\n  \"animationPreload\",\n  \"animationAutoStart\",\n  \"axisColor\",\n  \"axisFontSize\",\n  \"axisFontType\",\n  \"gridColor\",\n  \"xCenter\",\n  \"yCenter\",\n  \"zoomable\",\n  \"tooltipDelay\",\n  \"ctrlToZoom\",\n];\n\n/**\n * Field names in the options hash which are of relevance to the user.\n *\n * Same as OPTIONKEYS, but internally these fields are stored with\n * prefix 'default' in the name.\n */\nconst PREFIXEDOPTIONKEYS = [\n  \"xBarWidth\",\n  \"yBarWidth\",\n  \"valueMin\",\n  \"valueMax\",\n  \"xMin\",\n  \"xMax\",\n  \"xStep\",\n  \"yMin\",\n  \"yMax\",\n  \"yStep\",\n  \"zMin\",\n  \"zMax\",\n  \"zStep\",\n];\n\n// Placeholder for DEFAULTS reference\nlet DEFAULTS = undefined;\n\n/**\n * Check if given hash is empty.\n *\n * Source: http://stackoverflow.com/a/679937\n *\n * @param {object} obj\n * @returns {boolean}\n */\nfunction isEmpty(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) return false;\n  }\n\n  return true;\n}\n\n/**\n * Make first letter of parameter upper case.\n *\n * Source: http://stackoverflow.com/a/1026087\n *\n * @param {string} str\n * @returns {string}\n */\nfunction capitalize(str) {\n  if (str === undefined || str === \"\" || typeof str != \"string\") {\n    return str;\n  }\n\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Add a prefix to a field name, taking style guide into account\n *\n * @param {string} prefix\n * @param {string} fieldName\n * @returns {string}\n */\nfunction prefixFieldName(prefix, fieldName) {\n  if (prefix === undefined || prefix === \"\") {\n    return fieldName;\n  }\n\n  return prefix + capitalize(fieldName);\n}\n\n/**\n * Forcibly copy fields from src to dst in a controlled manner.\n *\n * A given field in dst will always be overwitten. If this field\n * is undefined or not present in src, the field in dst will\n * be explicitly set to undefined.\n *\n * The intention here is to be able to reset all option fields.\n *\n * Only the fields mentioned in array 'fields' will be handled.\n *\n * @param {object} src\n * @param {object} dst\n * @param {Array<string>} fields array with names of fields to copy\n * @param {string} [prefix] prefix to use for the target fields.\n */\nfunction forceCopy(src, dst, fields, prefix) {\n  let srcKey;\n  let dstKey;\n\n  for (let i = 0; i < fields.length; ++i) {\n    srcKey = fields[i];\n    dstKey = prefixFieldName(prefix, srcKey);\n\n    dst[dstKey] = src[srcKey];\n  }\n}\n\n/**\n * Copy fields from src to dst in a safe and controlled manner.\n *\n * Only the fields mentioned in array 'fields' will be copied over,\n * and only if these are actually defined.\n *\n * @param {object} src\n * @param {object} dst\n * @param {Array<string>} fields array with names of fields to copy\n * @param {string} [prefix] prefix to use for the target fields.\n */\nfunction safeCopy(src, dst, fields, prefix) {\n  let srcKey;\n  let dstKey;\n\n  for (let i = 0; i < fields.length; ++i) {\n    srcKey = fields[i];\n    if (src[srcKey] === undefined) continue;\n\n    dstKey = prefixFieldName(prefix, srcKey);\n\n    dst[dstKey] = src[srcKey];\n  }\n}\n\n/**\n * Initialize dst with the values in src.\n *\n * src is the hash with the default values.\n * A reference DEFAULTS to this hash is stored locally for\n * further handling.\n *\n * For now, dst is assumed to be a Graph3d instance.\n *\n * @param {object} src\n * @param {object} dst\n */\nfunction setDefaults(src, dst) {\n  if (src === undefined || isEmpty(src)) {\n    throw new Error(\"No DEFAULTS passed\");\n  }\n  if (dst === undefined) {\n    throw new Error(\"No dst passed\");\n  }\n\n  // Remember defaults for future reference\n  DEFAULTS = src;\n\n  // Handle the defaults which can be simply copied over\n  forceCopy(src, dst, OPTIONKEYS);\n  forceCopy(src, dst, PREFIXEDOPTIONKEYS, \"default\");\n\n  // Handle the more complex ('special') fields\n  setSpecialSettings(src, dst);\n\n  // Following are internal fields, not part of the user settings\n  dst.margin = 10; // px\n  dst.showTooltip = false;\n  dst.onclick_callback = null;\n  dst.eye = new Point3d(0, 0, -1); // TODO: set eye.z about 3/4 of the width of the window?\n}\n\n/**\n *\n * @param {object} options\n * @param {object} dst\n */\nfunction setOptions(options, dst) {\n  if (options === undefined) {\n    return;\n  }\n  if (dst === undefined) {\n    throw new Error(\"No dst passed\");\n  }\n\n  if (DEFAULTS === undefined || isEmpty(DEFAULTS)) {\n    throw new Error(\"DEFAULTS not set for module Settings\");\n  }\n\n  // Handle the parameters which can be simply copied over\n  safeCopy(options, dst, OPTIONKEYS);\n  safeCopy(options, dst, PREFIXEDOPTIONKEYS, \"default\");\n\n  // Handle the more complex ('special') fields\n  setSpecialSettings(options, dst);\n}\n\n/**\n * Special handling for certain parameters\n *\n * 'Special' here means: setting requires more than a simple copy\n *\n * @param {object} src\n * @param {object} dst\n */\nfunction setSpecialSettings(src, dst) {\n  if (src.backgroundColor !== undefined) {\n    setBackgroundColor(src.backgroundColor, dst);\n  }\n\n  setDataColor(src.dataColor, dst);\n  setStyle(src.style, dst);\n  if (src.surfaceColors !== undefined) {\n    console.warn(\n      \"`options.surfaceColors` is deprecated and may be removed in a future \" +\n        \"version. Please use `options.colormap` instead. Note that the `colormap` \" +\n        \"option uses the inverse array ordering (running from vMin to vMax).\"\n    );\n    if (src.colormap !== undefined) {\n      throw new Error(\n        \"The `colormap` and `surfaceColors` options are mutually exclusive.\"\n      );\n    }\n    if (dst.style !== \"surface\") {\n      console.warn(\n        \"Ignoring `surfaceColors` in graph style `\" +\n          dst.style +\n          \"` for \" +\n          \"backward compatibility (only effective in `surface` plots).\"\n      );\n    } else {\n      setSurfaceColor(src.surfaceColors, dst);\n    }\n  } else {\n    setColormap(src.colormap, dst);\n  }\n  setShowLegend(src.showLegend, dst);\n  setCameraPosition(src.cameraPosition, dst);\n\n  // As special fields go, this is an easy one; just a translation of the name.\n  // Can't use this.tooltip directly, because that field exists internally\n  if (src.tooltip !== undefined) {\n    dst.showTooltip = src.tooltip;\n  }\n  if (src.onclick != undefined) {\n    dst.onclick_callback = src.onclick;\n    console.warn(\n      \"`options.onclick` is deprecated and may be removed in a future version.\" +\n        \" Please use `Graph3d.on('click', handler)` instead.\"\n    );\n  }\n\n  if (src.tooltipStyle !== undefined) {\n    util.selectiveDeepExtend([\"tooltipStyle\"], dst, src);\n  }\n}\n\n/**\n * Set the value of setting 'showLegend'\n *\n * This depends on the value of the style fields, so it must be called\n * after the style field has been initialized.\n *\n * @param {boolean} showLegend\n * @param {object} dst\n */\nfunction setShowLegend(showLegend, dst) {\n  if (showLegend === undefined) {\n    // If the default was auto, make a choice for this field\n    const isAutoByDefault = DEFAULTS.showLegend === undefined;\n\n    if (isAutoByDefault) {\n      // these styles default to having legends\n      const isLegendGraphStyle =\n        dst.style === STYLE.DOTCOLOR || dst.style === STYLE.DOTSIZE;\n\n      dst.showLegend = isLegendGraphStyle;\n    } else {\n      // Leave current value as is\n    }\n  } else {\n    dst.showLegend = showLegend;\n  }\n}\n\n/**\n * Retrieve the style index from given styleName\n *\n * @param {string} styleName  Style name such as 'dot', 'grid', 'dot-line'\n * @returns {number} styleNumber Enumeration value representing the style, or -1\n *                when not found\n */\nfunction getStyleNumberByName(styleName) {\n  const number = STYLENAME[styleName];\n\n  if (number === undefined) {\n    return -1;\n  }\n\n  return number;\n}\n\n/**\n * Check if given number is a valid style number.\n *\n * @param {string | number} style\n * @returns {boolean} true if valid, false otherwise\n */\nfunction checkStyleNumber(style) {\n  let valid = false;\n\n  for (const n in STYLE) {\n    if (STYLE[n] === style) {\n      valid = true;\n      break;\n    }\n  }\n\n  return valid;\n}\n\n/**\n *\n * @param {string | number} style\n * @param {object} dst\n */\nfunction setStyle(style, dst) {\n  if (style === undefined) {\n    return; // Nothing to do\n  }\n\n  let styleNumber;\n\n  if (typeof style === \"string\") {\n    styleNumber = getStyleNumberByName(style);\n\n    if (styleNumber === -1) {\n      throw new Error(\"Style '\" + style + \"' is invalid\");\n    }\n  } else {\n    // Do a pedantic check on style number value\n    if (!checkStyleNumber(style)) {\n      throw new Error(\"Style '\" + style + \"' is invalid\");\n    }\n\n    styleNumber = style;\n  }\n\n  dst.style = styleNumber;\n}\n\n/**\n * Set the background styling for the graph\n *\n * @param {string | {fill: string, stroke: string, strokeWidth: string}} backgroundColor\n * @param {object} dst\n */\nfunction setBackgroundColor(backgroundColor, dst) {\n  let fill = \"white\";\n  let stroke = \"gray\";\n  let strokeWidth = 1;\n\n  if (typeof backgroundColor === \"string\") {\n    fill = backgroundColor;\n    stroke = \"none\";\n    strokeWidth = 0;\n  } else if (typeof backgroundColor === \"object\") {\n    if (backgroundColor.fill !== undefined) fill = backgroundColor.fill;\n    if (backgroundColor.stroke !== undefined) stroke = backgroundColor.stroke;\n    if (backgroundColor.strokeWidth !== undefined)\n      strokeWidth = backgroundColor.strokeWidth;\n  } else {\n    throw new Error(\"Unsupported type of backgroundColor\");\n  }\n\n  dst.frame.style.backgroundColor = fill;\n  dst.frame.style.borderColor = stroke;\n  dst.frame.style.borderWidth = strokeWidth + \"px\";\n  dst.frame.style.borderStyle = \"solid\";\n}\n\n/**\n *\n * @param {string | object} dataColor\n * @param {object} dst\n */\nfunction setDataColor(dataColor, dst) {\n  if (dataColor === undefined) {\n    return; // Nothing to do\n  }\n\n  if (dst.dataColor === undefined) {\n    dst.dataColor = {};\n  }\n\n  if (typeof dataColor === \"string\") {\n    dst.dataColor.fill = dataColor;\n    dst.dataColor.stroke = dataColor;\n  } else {\n    if (dataColor.fill) {\n      dst.dataColor.fill = dataColor.fill;\n    }\n    if (dataColor.stroke) {\n      dst.dataColor.stroke = dataColor.stroke;\n    }\n    if (dataColor.strokeWidth !== undefined) {\n      dst.dataColor.strokeWidth = dataColor.strokeWidth;\n    }\n  }\n}\n\n/**\n *\n * @param {object | Array<string>} surfaceColors Either an object that describes the HUE, or an array of HTML hex color codes\n * @param {object} dst\n */\nfunction setSurfaceColor(surfaceColors, dst) {\n  if (surfaceColors === undefined || surfaceColors === true) {\n    return; // Nothing to do\n  }\n  if (surfaceColors === false) {\n    dst.surfaceColors = undefined;\n    return;\n  }\n\n  if (dst.surfaceColors === undefined) {\n    dst.surfaceColors = {};\n  }\n\n  let rgbColors;\n  if (Array.isArray(surfaceColors)) {\n    rgbColors = parseColorArray(surfaceColors);\n  } else if (typeof surfaceColors === \"object\") {\n    rgbColors = parseColorObject(surfaceColors.hue);\n  } else {\n    throw new Error(\"Unsupported type of surfaceColors\");\n  }\n  // for some reason surfaceColors goes from vMax to vMin:\n  rgbColors.reverse();\n  dst.colormap = rgbColors;\n}\n\n/**\n *\n * @param {object | Array<string>} colormap Either an object that describes the HUE, or an array of HTML hex color codes\n * @param {object} dst\n */\nfunction setColormap(colormap, dst) {\n  if (colormap === undefined) {\n    return;\n  }\n\n  let rgbColors;\n  if (Array.isArray(colormap)) {\n    rgbColors = parseColorArray(colormap);\n  } else if (typeof colormap === \"object\") {\n    rgbColors = parseColorObject(colormap.hue);\n  } else if (typeof colormap === \"function\") {\n    rgbColors = colormap;\n  } else {\n    throw new Error(\"Unsupported type of colormap\");\n  }\n  dst.colormap = rgbColors;\n}\n\n/**\n *\n * @param {Array} colormap\n */\nfunction parseColorArray(colormap) {\n  if (colormap.length < 2) {\n    throw new Error(\"Colormap array length must be 2 or above.\");\n  }\n  return colormap.map(function (colorCode) {\n    if (!util.isValidHex(colorCode)) {\n      throw new Error(`Invalid hex color code supplied to colormap.`);\n    }\n    return util.hexToRGB(colorCode);\n  });\n}\n\n/**\n * Converts an object to a certain amount of hex color stops. At which point:\n * the HTML hex color codes is converted into an RGB color object.\n *\n * @param {object} hues\n */\nfunction parseColorObject(hues) {\n  if (hues === undefined) {\n    throw new Error(\"Unsupported type of colormap\");\n  }\n  if (!(hues.saturation >= 0 && hues.saturation <= 100)) {\n    throw new Error(\"Saturation is out of bounds. Expected range is 0-100.\");\n  }\n  if (!(hues.brightness >= 0 && hues.brightness <= 100)) {\n    throw new Error(\"Brightness is out of bounds. Expected range is 0-100.\");\n  }\n  if (!(hues.colorStops >= 2)) {\n    throw new Error(\"colorStops is out of bounds. Expected 2 or above.\");\n  }\n\n  const hueStep = (hues.end - hues.start) / (hues.colorStops - 1);\n\n  const rgbColors = [];\n  for (let i = 0; i < hues.colorStops; ++i) {\n    const hue = ((hues.start + hueStep * i) % 360) / 360;\n    rgbColors.push(\n      util.HSVToRGB(\n        hue < 0 ? hue + 1 : hue,\n        hues.saturation / 100,\n        hues.brightness / 100\n      )\n    );\n  }\n  return rgbColors;\n}\n\n/**\n *\n * @param {object} cameraPosition\n * @param {object} dst\n */\nfunction setCameraPosition(cameraPosition, dst) {\n  const camPos = cameraPosition;\n  if (camPos === undefined) {\n    return;\n  }\n\n  if (dst.camera === undefined) {\n    dst.camera = new Camera();\n  }\n\n  dst.camera.setArmRotation(camPos.horizontal, camPos.vertical);\n  dst.camera.setArmLength(camPos.distance);\n}\n\nexport { STYLE, setCameraPosition, setDefaults, setOptions };\n","/**\n * This object contains all possible options. It will check if the types are correct, if required if the option is one\n * of the allowed values.\n *\n * __any__ means that the name of the property does not matter.\n * __type__ is a required field for all objects and contains the allowed types of all objects\n */\nconst string = \"string\";\nconst bool = \"boolean\";\nconst number = \"number\";\nconst object = \"object\"; // should only be in a __type__ property\nconst array = \"array\";\n// Following not used here, but useful for reference\n//let dom      = 'dom';\n//let any      = 'any';\n\nconst colorOptions = {\n  fill: { string },\n  stroke: { string },\n  strokeWidth: { number },\n  __type__: { string, object, undefined: \"undefined\" },\n};\n\nconst surfaceColorsOptions = {\n  hue: {\n    start: { number },\n    end: { number },\n    saturation: { number },\n    brightness: { number },\n    colorStops: { number },\n    __type__: { object },\n  },\n  __type__: { boolean: bool, array, object, undefined: \"undefined\" },\n};\n\nconst colormapOptions = {\n  hue: {\n    start: { number },\n    end: { number },\n    saturation: { number },\n    brightness: { number },\n    colorStops: { number },\n    __type__: { object },\n  },\n  __type__: { array, object, function: \"function\", undefined: \"undefined\" },\n};\n\n/**\n * Order attempted to be alphabetical.\n *   - x/y/z-prefixes ignored in sorting\n *   - __type__ always at end\n *   - globals at end\n */\nconst allOptions = {\n  animationAutoStart: { boolean: bool, undefined: \"undefined\" },\n  animationInterval: { number },\n  animationPreload: { boolean: bool },\n  axisColor: { string },\n  axisFontSize: { number: number },\n  axisFontType: { string: string },\n  backgroundColor: colorOptions,\n  xBarWidth: { number, undefined: \"undefined\" },\n  yBarWidth: { number, undefined: \"undefined\" },\n  cameraPosition: {\n    distance: { number },\n    horizontal: { number },\n    vertical: { number },\n    __type__: { object },\n  },\n  zoomable: { boolean: bool },\n  ctrlToZoom: { boolean: bool },\n  xCenter: { string },\n  yCenter: { string },\n  colormap: colormapOptions,\n  dataColor: colorOptions,\n  dotSizeMinFraction: { number },\n  dotSizeMaxFraction: { number },\n  dotSizeRatio: { number },\n  filterLabel: { string },\n  gridColor: { string },\n  onclick: { function: \"function\" },\n  keepAspectRatio: { boolean: bool },\n  xLabel: { string },\n  yLabel: { string },\n  zLabel: { string },\n  legendLabel: { string },\n  xMin: { number, undefined: \"undefined\" },\n  yMin: { number, undefined: \"undefined\" },\n  zMin: { number, undefined: \"undefined\" },\n  xMax: { number, undefined: \"undefined\" },\n  yMax: { number, undefined: \"undefined\" },\n  zMax: { number, undefined: \"undefined\" },\n  showAnimationControls: { boolean: bool, undefined: \"undefined\" },\n  showGrayBottom: { boolean: bool },\n  showGrid: { boolean: bool },\n  showLegend: { boolean: bool, undefined: \"undefined\" },\n  showPerspective: { boolean: bool },\n  showShadow: { boolean: bool },\n  showSurfaceGrid: { boolean: bool },\n  showXAxis: { boolean: bool },\n  showYAxis: { boolean: bool },\n  showZAxis: { boolean: bool },\n  rotateAxisLabels: { boolean: bool },\n  surfaceColors: surfaceColorsOptions,\n  xStep: { number, undefined: \"undefined\" },\n  yStep: { number, undefined: \"undefined\" },\n  zStep: { number, undefined: \"undefined\" },\n  style: {\n    number, // TODO: either Graph3d.DEFAULT has string, or number allowed in documentation\n    string: [\n      \"bar\",\n      \"bar-color\",\n      \"bar-size\",\n      \"dot\",\n      \"dot-line\",\n      \"dot-color\",\n      \"dot-size\",\n      \"line\",\n      \"grid\",\n      \"surface\",\n    ],\n  },\n  tooltip: { boolean: bool, function: \"function\" },\n  tooltipDelay: { number: number },\n  tooltipStyle: {\n    content: {\n      color: { string },\n      background: { string },\n      border: { string },\n      borderRadius: { string },\n      boxShadow: { string },\n      padding: { string },\n      __type__: { object },\n    },\n    line: {\n      borderLeft: { string },\n      height: { string },\n      width: { string },\n      pointerEvents: { string },\n      __type__: { object },\n    },\n    dot: {\n      border: { string },\n      borderRadius: { string },\n      height: { string },\n      width: { string },\n      pointerEvents: { string },\n      __type__: { object },\n    },\n    __type__: { object },\n  },\n  xValueLabel: { function: \"function\" },\n  yValueLabel: { function: \"function\" },\n  zValueLabel: { function: \"function\" },\n  valueMax: { number, undefined: \"undefined\" },\n  valueMin: { number, undefined: \"undefined\" },\n  verticalRatio: { number },\n\n  //globals :\n  height: { string },\n  width: { string },\n  __type__: { object },\n};\n\nexport { allOptions };\n","/**\n * Helper class to make working with related min and max values easier.\n *\n * The range is inclusive; a given value is considered part of the range if:\n *\n *    this.min <= value <= this.max\n */\nfunction Range() {\n  this.min = undefined;\n  this.max = undefined;\n}\n\n/**\n * Adjust the range so that the passed value fits in it.\n *\n * If the value is outside of the current extremes, adjust\n * the min or max so that the value is within the range.\n *\n * @param {number} value Numeric value to fit in range\n */\nRange.prototype.adjust = function (value) {\n  if (value === undefined) return;\n\n  if (this.min === undefined || this.min > value) {\n    this.min = value;\n  }\n\n  if (this.max === undefined || this.max < value) {\n    this.max = value;\n  }\n};\n\n/**\n * Adjust the current range so that the passed range fits in it.\n *\n * @param {Range} range Range instance to fit in current instance\n */\nRange.prototype.combine = function (range) {\n  this.add(range.min);\n  this.add(range.max);\n};\n\n/**\n * Expand the range by the given value\n *\n * min will be lowered by given value;\n * max will be raised by given value\n *\n * Shrinking by passing a negative value is allowed.\n *\n * @param {number} val Amount by which to expand or shrink current range with\n */\nRange.prototype.expand = function (val) {\n  if (val === undefined) {\n    return;\n  }\n\n  const newMin = this.min - val;\n  const newMax = this.max + val;\n\n  // Note that following allows newMin === newMax.\n  // This should be OK, since method expand() allows this also.\n  if (newMin > newMax) {\n    throw new Error(\"Passed expansion value makes range invalid\");\n  }\n\n  this.min = newMin;\n  this.max = newMax;\n};\n\n/**\n * Determine the full range width of current instance.\n *\n * @returns {num} The calculated width of this range\n */\nRange.prototype.range = function () {\n  return this.max - this.min;\n};\n\n/**\n * Determine the central point of current instance.\n *\n * @returns {number} the value in the middle of min and max\n */\nRange.prototype.center = function () {\n  return (this.min + this.max) / 2;\n};\n\nmodule.exports = Range;\n","import { DataView } from \"vis-data/esnext\";\n\n/**\n * @class Filter\n * @param {DataGroup} dataGroup the data group\n * @param {number}  column             The index of the column to be filtered\n * @param {Graph3d} graph              The graph\n */\nfunction Filter(dataGroup, column, graph) {\n  this.dataGroup = dataGroup;\n  this.column = column;\n  this.graph = graph; // the parent graph\n\n  this.index = undefined;\n  this.value = undefined;\n\n  // read all distinct values and select the first one\n  this.values = dataGroup.getDistinctValues(this.column);\n\n  if (this.values.length > 0) {\n    this.selectValue(0);\n  }\n\n  // create an array with the filtered datapoints. this will be loaded afterwards\n  this.dataPoints = [];\n\n  this.loaded = false;\n  this.onLoadCallback = undefined;\n\n  if (graph.animationPreload) {\n    this.loaded = false;\n    this.loadInBackground();\n  } else {\n    this.loaded = true;\n  }\n}\n\n/**\n * Return the label\n *\n * @returns {string} label\n */\nFilter.prototype.isLoaded = function () {\n  return this.loaded;\n};\n\n/**\n * Return the loaded progress\n *\n * @returns {number} percentage between 0 and 100\n */\nFilter.prototype.getLoadedProgress = function () {\n  const len = this.values.length;\n\n  let i = 0;\n  while (this.dataPoints[i]) {\n    i++;\n  }\n\n  return Math.round((i / len) * 100);\n};\n\n/**\n * Return the label\n *\n * @returns {string} label\n */\nFilter.prototype.getLabel = function () {\n  return this.graph.filterLabel;\n};\n\n/**\n * Return the columnIndex of the filter\n *\n * @returns {number} columnIndex\n */\nFilter.prototype.getColumn = function () {\n  return this.column;\n};\n\n/**\n * Return the currently selected value. Returns undefined if there is no selection\n *\n * @returns {*} value\n */\nFilter.prototype.getSelectedValue = function () {\n  if (this.index === undefined) return undefined;\n\n  return this.values[this.index];\n};\n\n/**\n * Retrieve all values of the filter\n *\n * @returns {Array} values\n */\nFilter.prototype.getValues = function () {\n  return this.values;\n};\n\n/**\n * Retrieve one value of the filter\n *\n * @param {number}  index\n * @returns {*} value\n */\nFilter.prototype.getValue = function (index) {\n  if (index >= this.values.length) throw new Error(\"Index out of range\");\n\n  return this.values[index];\n};\n\n/**\n * Retrieve the (filtered) dataPoints for the currently selected filter index\n *\n * @param {number} [index] (optional)\n * @returns {Array} dataPoints\n */\nFilter.prototype._getDataPoints = function (index) {\n  if (index === undefined) index = this.index;\n\n  if (index === undefined) return [];\n\n  let dataPoints;\n  if (this.dataPoints[index]) {\n    dataPoints = this.dataPoints[index];\n  } else {\n    const f = {};\n    f.column = this.column;\n    f.value = this.values[index];\n\n    const dataView = new DataView(this.dataGroup.getDataSet(), {\n      filter: function (item) {\n        return item[f.column] == f.value;\n      },\n    }).get();\n    dataPoints = this.dataGroup._getDataPoints(dataView);\n\n    this.dataPoints[index] = dataPoints;\n  }\n\n  return dataPoints;\n};\n\n/**\n * Set a callback function when the filter is fully loaded.\n *\n * @param {Function} callback\n */\nFilter.prototype.setOnLoadCallback = function (callback) {\n  this.onLoadCallback = callback;\n};\n\n/**\n * Add a value to the list with available values for this filter\n * No double entries will be created.\n *\n * @param {number} index\n */\nFilter.prototype.selectValue = function (index) {\n  if (index >= this.values.length) throw new Error(\"Index out of range\");\n\n  this.index = index;\n  this.value = this.values[index];\n};\n\n/**\n * Load all filtered rows in the background one by one\n * Start this method without providing an index!\n *\n * @param {number} [index=0]\n */\nFilter.prototype.loadInBackground = function (index) {\n  if (index === undefined) index = 0;\n\n  const frame = this.graph.frame;\n\n  if (index < this.values.length) {\n    // create a progress box\n    if (frame.progress === undefined) {\n      frame.progress = document.createElement(\"DIV\");\n      frame.progress.style.position = \"absolute\";\n      frame.progress.style.color = \"gray\";\n      frame.appendChild(frame.progress);\n    }\n    const progress = this.getLoadedProgress();\n    frame.progress.innerHTML = \"Loading animation... \" + progress + \"%\";\n    // TODO: this is no nice solution...\n    frame.progress.style.bottom = 60 + \"px\"; // TODO: use height of slider\n    frame.progress.style.left = 10 + \"px\";\n\n    const me = this;\n    setTimeout(function () {\n      me.loadInBackground(index + 1);\n    }, 10);\n    this.loaded = false;\n  } else {\n    this.loaded = true;\n\n    // remove the progress box\n    if (frame.progress !== undefined) {\n      frame.removeChild(frame.progress);\n      frame.progress = undefined;\n    }\n\n    if (this.onLoadCallback) this.onLoadCallback();\n  }\n};\n\nexport default Filter;\n","import { DataSet } from \"vis-data/esnext\";\nimport { DataView } from \"vis-data/esnext\";\nimport Range from \"./Range\";\nimport Filter from \"./Filter\";\nimport { STYLE } from \"./Settings\";\nimport Point3d from \"./Point3d\";\n\n/**\n * Creates a container for all data of one specific 3D-graph.\n *\n * On construction, the container is totally empty; the data\n * needs to be initialized with method initializeData().\n * Failure to do so will result in the following exception begin thrown\n * on instantiation of Graph3D:\n *\n *     Error: Array, DataSet, or DataView expected\n *\n * @function Object() { [native code] } DataGroup\n */\nfunction DataGroup() {\n  this.dataTable = null; // The original data table\n}\n\n/**\n * Initializes the instance from the passed data.\n *\n * Calculates minimum and maximum values and column index values.\n *\n * The graph3d instance is used internally to access the settings for\n * the given instance.\n * TODO: Pass settings only instead.\n *\n * @param {vis.Graph3d}  graph3d Reference to the calling Graph3D instance.\n * @param {Array | DataSet | DataView} rawData The data containing the items for\n *                                             the Graph.\n * @param {number}   style   Style Number\n * @returns {Array.<object>}\n */\nDataGroup.prototype.initializeData = function (graph3d, rawData, style) {\n  if (rawData === undefined) return;\n\n  if (Array.isArray(rawData)) {\n    rawData = new DataSet(rawData);\n  }\n\n  let data;\n  if (rawData instanceof DataSet || rawData instanceof DataView) {\n    data = rawData.get();\n  } else {\n    throw new Error(\"Array, DataSet, or DataView expected\");\n  }\n\n  if (data.length == 0) return;\n\n  this.style = style;\n\n  // unsubscribe from the dataTable\n  if (this.dataSet) {\n    this.dataSet.off(\"*\", this._onChange);\n  }\n\n  this.dataSet = rawData;\n  this.dataTable = data;\n\n  // subscribe to changes in the dataset\n  const me = this;\n  this._onChange = function () {\n    graph3d.setData(me.dataSet);\n  };\n  this.dataSet.on(\"*\", this._onChange);\n\n  // determine the location of x,y,z,value,filter columns\n  this.colX = \"x\";\n  this.colY = \"y\";\n  this.colZ = \"z\";\n\n  const withBars = graph3d.hasBars(style);\n\n  // determine barWidth from data\n  if (withBars) {\n    if (graph3d.defaultXBarWidth !== undefined) {\n      this.xBarWidth = graph3d.defaultXBarWidth;\n    } else {\n      this.xBarWidth = this.getSmallestDifference(data, this.colX) || 1;\n    }\n\n    if (graph3d.defaultYBarWidth !== undefined) {\n      this.yBarWidth = graph3d.defaultYBarWidth;\n    } else {\n      this.yBarWidth = this.getSmallestDifference(data, this.colY) || 1;\n    }\n  }\n\n  // calculate minima and maxima\n  this._initializeRange(data, this.colX, graph3d, withBars);\n  this._initializeRange(data, this.colY, graph3d, withBars);\n  this._initializeRange(data, this.colZ, graph3d, false);\n\n  if (Object.prototype.hasOwnProperty.call(data[0], \"style\")) {\n    this.colValue = \"style\";\n    const valueRange = this.getColumnRange(data, this.colValue);\n    this._setRangeDefaults(\n      valueRange,\n      graph3d.defaultValueMin,\n      graph3d.defaultValueMax\n    );\n    this.valueRange = valueRange;\n  } else {\n    this.colValue = \"z\";\n    this.valueRange = this.zRange;\n  }\n\n  // Initialize data filter if a filter column is provided\n  const table = this.getDataTable();\n  if (Object.prototype.hasOwnProperty.call(table[0], \"filter\")) {\n    if (this.dataFilter === undefined) {\n      this.dataFilter = new Filter(this, \"filter\", graph3d);\n      this.dataFilter.setOnLoadCallback(function () {\n        graph3d.redraw();\n      });\n    }\n  }\n\n  let dataPoints;\n  if (this.dataFilter) {\n    // apply filtering\n    dataPoints = this.dataFilter._getDataPoints();\n  } else {\n    // no filtering. load all data\n    dataPoints = this._getDataPoints(this.getDataTable());\n  }\n  return dataPoints;\n};\n\n/**\n * Collect the range settings for the given data column.\n *\n * This internal method is intended to make the range\n * initalization more generic.\n *\n * TODO: if/when combined settings per axis defined, get rid of this.\n *\n * @private\n * @param {'x'|'y'|'z'} column  The data column to process\n * @param {vis.Graph3d} graph3d Reference to the calling Graph3D instance;\n *                              required for access to settings\n * @returns {object}\n */\nDataGroup.prototype._collectRangeSettings = function (column, graph3d) {\n  const index = [\"x\", \"y\", \"z\"].indexOf(column);\n\n  if (index == -1) {\n    throw new Error(\"Column '\" + column + \"' invalid\");\n  }\n\n  const upper = column.toUpperCase();\n\n  return {\n    barWidth: this[column + \"BarWidth\"],\n    min: graph3d[\"default\" + upper + \"Min\"],\n    max: graph3d[\"default\" + upper + \"Max\"],\n    step: graph3d[\"default\" + upper + \"Step\"],\n    range_label: column + \"Range\", // Name of instance field to write to\n    step_label: column + \"Step\", // Name of instance field to write to\n  };\n};\n\n/**\n * Initializes the settings per given column.\n *\n * TODO: if/when combined settings per axis defined, rewrite this.\n *\n * @private\n * @param {DataSet | DataView} data     The data containing the items for the Graph\n * @param {'x'|'y'|'z'}        column   The data column to process\n * @param {vis.Graph3d}        graph3d  Reference to the calling Graph3D instance;\n *                                      required for access to settings\n * @param {boolean}            withBars True if initializing for bar graph\n */\nDataGroup.prototype._initializeRange = function (\n  data,\n  column,\n  graph3d,\n  withBars\n) {\n  const NUMSTEPS = 5;\n  const settings = this._collectRangeSettings(column, graph3d);\n\n  const range = this.getColumnRange(data, column);\n  if (withBars && column != \"z\") {\n    // Safeguard for 'z'; it doesn't have a bar width\n    range.expand(settings.barWidth / 2);\n  }\n\n  this._setRangeDefaults(range, settings.min, settings.max);\n  this[settings.range_label] = range;\n  this[settings.step_label] =\n    settings.step !== undefined ? settings.step : range.range() / NUMSTEPS;\n};\n\n/**\n * Creates a list with all the different values in the data for the given column.\n *\n * If no data passed, use the internal data of this instance.\n *\n * @param {'x'|'y'|'z'}                column The data column to process\n * @param {DataSet|DataView|undefined} data   The data containing the items for the Graph\n * @returns {Array} All distinct values in the given column data, sorted ascending.\n */\nDataGroup.prototype.getDistinctValues = function (column, data) {\n  if (data === undefined) {\n    data = this.dataTable;\n  }\n\n  const values = [];\n\n  for (let i = 0; i < data.length; i++) {\n    const value = data[i][column] || 0;\n    if (values.indexOf(value) === -1) {\n      values.push(value);\n    }\n  }\n\n  return values.sort(function (a, b) {\n    return a - b;\n  });\n};\n\n/**\n * Determine the smallest difference between the values for given\n * column in the passed data set.\n *\n * @param {DataSet|DataView|undefined} data   The data containing the items for the Graph\n * @param {'x'|'y'|'z'}                column The data column to process\n * @returns {number|null} Smallest difference value or\n *                        null, if it can't be determined.\n */\nDataGroup.prototype.getSmallestDifference = function (data, column) {\n  const values = this.getDistinctValues(data, column);\n\n  // Get all the distinct diffs\n  // Array values is assumed to be sorted here\n  let smallest_diff = null;\n\n  for (let i = 1; i < values.length; i++) {\n    const diff = values[i] - values[i - 1];\n\n    if (smallest_diff == null || smallest_diff > diff) {\n      smallest_diff = diff;\n    }\n  }\n\n  return smallest_diff;\n};\n\n/**\n * Get the absolute min/max values for the passed data column.\n *\n * @param {DataSet|DataView|undefined} data   The data containing the items for the Graph\n * @param {'x'|'y'|'z'}                column The data column to process\n * @returns {Range} A Range instance with min/max members properly set.\n */\nDataGroup.prototype.getColumnRange = function (data, column) {\n  const range = new Range();\n\n  // Adjust the range so that it covers all values in the passed data elements.\n  for (let i = 0; i < data.length; i++) {\n    const item = data[i][column];\n    range.adjust(item);\n  }\n\n  return range;\n};\n\n/**\n * Determines the number of rows in the current data.\n *\n * @returns {number}\n */\nDataGroup.prototype.getNumberOfRows = function () {\n  return this.dataTable.length;\n};\n\n/**\n * Set default values for range\n *\n * The default values override the range values, if defined.\n *\n * Because it's possible that only defaultMin or defaultMax is set, it's better\n * to pass in a range already set with the min/max set from the data. Otherwise,\n * it's quite hard to process the min/max properly.\n *\n * @param {vis.Range} range\n * @param {number} [defaultMin=range.min]\n * @param {number} [defaultMax=range.max]\n * @private\n */\nDataGroup.prototype._setRangeDefaults = function (\n  range,\n  defaultMin,\n  defaultMax\n) {\n  if (defaultMin !== undefined) {\n    range.min = defaultMin;\n  }\n\n  if (defaultMax !== undefined) {\n    range.max = defaultMax;\n  }\n\n  // This is the original way that the default min/max values were adjusted.\n  // TODO: Perhaps it's better if an error is thrown if the values do not agree.\n  //       But this will change the behaviour.\n  if (range.max <= range.min) range.max = range.min + 1;\n};\n\nDataGroup.prototype.getDataTable = function () {\n  return this.dataTable;\n};\n\nDataGroup.prototype.getDataSet = function () {\n  return this.dataSet;\n};\n\n/**\n * Return all data values as a list of Point3d objects\n *\n * @param {Array.<object>} data\n * @returns {Array.<object>}\n */\nDataGroup.prototype.getDataPoints = function (data) {\n  const dataPoints = [];\n\n  for (let i = 0; i < data.length; i++) {\n    const point = new Point3d();\n    point.x = data[i][this.colX] || 0;\n    point.y = data[i][this.colY] || 0;\n    point.z = data[i][this.colZ] || 0;\n    point.data = data[i];\n    point.value = data[i][this.colValue] || 0;\n\n    const obj = {};\n    obj.point = point;\n    obj.bottom = new Point3d(point.x, point.y, this.zRange.min);\n    obj.trans = undefined;\n    obj.screen = undefined;\n\n    dataPoints.push(obj);\n  }\n\n  return dataPoints;\n};\n\n/**\n * Copy all values from the data table to a matrix.\n *\n * The provided values are supposed to form a grid of (x,y) positions.\n *\n * @param {Array.<object>} data\n * @returns {Array.<object>}\n * @private\n */\nDataGroup.prototype.initDataAsMatrix = function (data) {\n  // TODO: store the created matrix dataPoints in the filters instead of\n  //       reloading each time.\n  let x, y, i, obj;\n\n  // create two lists with all present x and y values\n  const dataX = this.getDistinctValues(this.colX, data);\n  const dataY = this.getDistinctValues(this.colY, data);\n\n  const dataPoints = this.getDataPoints(data);\n\n  // create a grid, a 2d matrix, with all values.\n  const dataMatrix = []; // temporary data matrix\n  for (i = 0; i < dataPoints.length; i++) {\n    obj = dataPoints[i];\n\n    // TODO: implement Array().indexOf() for Internet Explorer\n    const xIndex = dataX.indexOf(obj.point.x);\n    const yIndex = dataY.indexOf(obj.point.y);\n\n    if (dataMatrix[xIndex] === undefined) {\n      dataMatrix[xIndex] = [];\n    }\n\n    dataMatrix[xIndex][yIndex] = obj;\n  }\n\n  // fill in the pointers to the neighbors.\n  for (x = 0; x < dataMatrix.length; x++) {\n    for (y = 0; y < dataMatrix[x].length; y++) {\n      if (dataMatrix[x][y]) {\n        dataMatrix[x][y].pointRight =\n          x < dataMatrix.length - 1 ? dataMatrix[x + 1][y] : undefined;\n        dataMatrix[x][y].pointTop =\n          y < dataMatrix[x].length - 1 ? dataMatrix[x][y + 1] : undefined;\n        dataMatrix[x][y].pointCross =\n          x < dataMatrix.length - 1 && y < dataMatrix[x].length - 1\n            ? dataMatrix[x + 1][y + 1]\n            : undefined;\n      }\n    }\n  }\n\n  return dataPoints;\n};\n\n/**\n * Return common information, if present\n *\n * @returns {string}\n */\nDataGroup.prototype.getInfo = function () {\n  const dataFilter = this.dataFilter;\n  if (!dataFilter) return undefined;\n\n  return dataFilter.getLabel() + \": \" + dataFilter.getSelectedValue();\n};\n\n/**\n * Reload the data\n */\nDataGroup.prototype.reload = function () {\n  if (this.dataTable) {\n    this.setData(this.dataTable);\n  }\n};\n\n/**\n * Filter the data based on the current filter\n *\n * @param   {Array} data\n * @returns {Array} dataPoints Array with point objects which can be drawn on\n *                             screen\n */\nDataGroup.prototype._getDataPoints = function (data) {\n  let dataPoints = [];\n\n  if (this.style === STYLE.GRID || this.style === STYLE.SURFACE) {\n    dataPoints = this.initDataAsMatrix(data);\n  } else {\n    // 'dot', 'dot-line', etc.\n    dataPoints = this.getDataPoints(data);\n\n    if (this.style === STYLE.LINE) {\n      // Add next member points for line drawing\n      for (let i = 0; i < dataPoints.length; i++) {\n        if (i > 0) {\n          dataPoints[i - 1].pointNext = dataPoints[i];\n        }\n      }\n    }\n  }\n\n  return dataPoints;\n};\n\nexport default DataGroup;\n","import Emitter from \"component-emitter\";\nimport * as util from \"vis-util/esnext\";\nimport Point3d from \"./Point3d\";\nimport Point2d from \"./Point2d\";\nimport Slider from \"./Slider\";\nimport StepNumber from \"./StepNumber\";\nimport { STYLE, setCameraPosition, setDefaults, setOptions } from \"./Settings\";\nimport { VALIDATOR_PRINT_STYLE, Validator } from \"vis-util/esnext\";\nimport { allOptions } from \"./options.js\";\nimport DataGroup from \"./DataGroup\";\n\n/// enumerate the available styles\nGraph3d.STYLE = STYLE;\n\n/**\n * Following label is used in the settings to describe values which should be\n * determined by the code while running, from the current data and graph style.\n *\n * Using 'undefined' directly achieves the same thing, but this is more\n * descriptive by describing the intent.\n */\nconst autoByDefault = undefined;\n\n/**\n * Default values for option settings.\n *\n * These are the values used when a Graph3d instance is initialized without\n * custom settings.\n *\n * If a field is not in this list, a default value of 'autoByDefault' is assumed,\n * which is just an alias for 'undefined'.\n */\nGraph3d.DEFAULTS = {\n  width: \"400px\",\n  height: \"400px\",\n  filterLabel: \"time\",\n  legendLabel: \"value\",\n  xLabel: \"x\",\n  yLabel: \"y\",\n  zLabel: \"z\",\n  xValueLabel: function (v) {\n    return v;\n  },\n  yValueLabel: function (v) {\n    return v;\n  },\n  zValueLabel: function (v) {\n    return v;\n  },\n  showXAxis: true,\n  showYAxis: true,\n  showZAxis: true,\n  showGrayBottom: false,\n  showGrid: true,\n  showPerspective: true,\n  showShadow: false,\n  showSurfaceGrid: true,\n  keepAspectRatio: true,\n  rotateAxisLabels: true,\n  verticalRatio: 0.5, // 0.1 to 1.0, where 1.0 results in a 'cube'\n\n  dotSizeRatio: 0.02, // size of the dots as a fraction of the graph width\n  dotSizeMinFraction: 0.5, // size of min-value dot as a fraction of dotSizeRatio\n  dotSizeMaxFraction: 2.5, // size of max-value dot as a fraction of dotSizeRatio\n\n  showAnimationControls: autoByDefault,\n  animationInterval: 1000, // milliseconds\n  animationPreload: false,\n  animationAutoStart: autoByDefault,\n\n  axisFontSize: 14,\n  axisFontType: \"arial\",\n  axisColor: \"#4D4D4D\",\n  gridColor: \"#D3D3D3\",\n  xCenter: \"55%\",\n  yCenter: \"50%\",\n\n  style: Graph3d.STYLE.DOT,\n  tooltip: false,\n  tooltipDelay: 300, // milliseconds\n\n  tooltipStyle: {\n    content: {\n      padding: \"10px\",\n      border: \"1px solid #4d4d4d\",\n      color: \"#1a1a1a\",\n      background: \"rgba(255,255,255,0.7)\",\n      borderRadius: \"2px\",\n      boxShadow: \"5px 5px 10px rgba(128,128,128,0.5)\",\n    },\n    line: {\n      height: \"40px\",\n      width: \"0\",\n      borderLeft: \"1px solid #4d4d4d\",\n      pointerEvents: \"none\",\n    },\n    dot: {\n      height: \"0\",\n      width: \"0\",\n      border: \"5px solid #4d4d4d\",\n      borderRadius: \"5px\",\n      pointerEvents: \"none\",\n    },\n  },\n\n  dataColor: {\n    fill: \"#7DC1FF\",\n    stroke: \"#3267D2\",\n    strokeWidth: 1, // px\n  },\n\n  surfaceColors: autoByDefault,\n  colormap: autoByDefault,\n\n  cameraPosition: {\n    horizontal: 1.0,\n    vertical: 0.5,\n    distance: 1.7,\n  },\n\n  zoomable: true,\n  ctrlToZoom: false,\n\n  /*\n  The following fields are 'auto by default', see above.\n */\n  showLegend: autoByDefault, // determined by graph style\n  backgroundColor: autoByDefault,\n\n  xBarWidth: autoByDefault,\n  yBarWidth: autoByDefault,\n  valueMin: autoByDefault,\n  valueMax: autoByDefault,\n  xMin: autoByDefault,\n  xMax: autoByDefault,\n  xStep: autoByDefault,\n  yMin: autoByDefault,\n  yMax: autoByDefault,\n  yStep: autoByDefault,\n  zMin: autoByDefault,\n  zMax: autoByDefault,\n  zStep: autoByDefault,\n};\n\n// -----------------------------------------------------------------------------\n// Class Graph3d\n// -----------------------------------------------------------------------------\n\n/**\n * Graph3d displays data in 3d.\n *\n * Graph3d is developed in javascript as a Google Visualization Chart.\n *\n * @function Object() { [native code] } Graph3d\n * @param {Element} container   The DOM element in which the Graph3d will\n *                              be created. Normally a div element.\n * @param {DataSet | DataView | Array} [data]\n * @param {object} [options]\n */\nfunction Graph3d(container, data, options) {\n  if (!(this instanceof Graph3d)) {\n    throw new SyntaxError(\"Constructor must be called with the new operator\");\n  }\n\n  // create variables and set default values\n  this.containerElement = container;\n\n  this.dataGroup = new DataGroup();\n  this.dataPoints = null; // The table with point objects\n\n  // create a frame and canvas\n  this.create();\n\n  setDefaults(Graph3d.DEFAULTS, this);\n\n  // the column indexes\n  this.colX = undefined;\n  this.colY = undefined;\n  this.colZ = undefined;\n  this.colValue = undefined;\n\n  // TODO: customize axis range\n\n  // apply options (also when undefined)\n  this.setOptions(options);\n\n  // apply data\n  this.setData(data);\n}\n\n// Extend Graph3d with an Emitter mixin\nEmitter(Graph3d.prototype);\n\n/**\n * Calculate the scaling values, dependent on the range in x, y, and z direction\n */\nGraph3d.prototype._setScale = function () {\n  this.scale = new Point3d(\n    1 / this.xRange.range(),\n    1 / this.yRange.range(),\n    1 / this.zRange.range()\n  );\n\n  // keep aspect ration between x and y scale if desired\n  if (this.keepAspectRatio) {\n    if (this.scale.x < this.scale.y) {\n      //noinspection JSSuspiciousNameCombination\n      this.scale.y = this.scale.x;\n    } else {\n      //noinspection JSSuspiciousNameCombination\n      this.scale.x = this.scale.y;\n    }\n  }\n\n  // scale the vertical axis\n  this.scale.z *= this.verticalRatio;\n  // TODO: can this be automated? verticalRatio?\n\n  // determine scale for (optional) value\n  if (this.valueRange !== undefined) {\n    this.scale.value = 1 / this.valueRange.range();\n  }\n\n  // position the camera arm\n  const xCenter = this.xRange.center() * this.scale.x;\n  const yCenter = this.yRange.center() * this.scale.y;\n  const zCenter = this.zRange.center() * this.scale.z;\n  this.camera.setArmLocation(xCenter, yCenter, zCenter);\n};\n\n/**\n * Convert a 3D location to a 2D location on screen\n * Source: ttp://en.wikipedia.org/wiki/3D_projection\n *\n * @param   {Point3d} point3d  A 3D point with parameters x, y, z\n * @returns {Point2d} point2d  A 2D point with parameters x, y\n */\nGraph3d.prototype._convert3Dto2D = function (point3d) {\n  const translation = this._convertPointToTranslation(point3d);\n  return this._convertTranslationToScreen(translation);\n};\n\n/**\n * Convert a 3D location its translation seen from the camera\n * Source: http://en.wikipedia.org/wiki/3D_projection\n *\n * @param   {Point3d} point3d     A 3D point with parameters x, y, z\n * @returns {Point3d} translation A 3D point with parameters x, y, z This is\n *                                the translation of the point, seen from the\n *                                camera.\n */\nGraph3d.prototype._convertPointToTranslation = function (point3d) {\n  const cameraLocation = this.camera.getCameraLocation(),\n    cameraRotation = this.camera.getCameraRotation(),\n    ax = point3d.x * this.scale.x,\n    ay = point3d.y * this.scale.y,\n    az = point3d.z * this.scale.z,\n    cx = cameraLocation.x,\n    cy = cameraLocation.y,\n    cz = cameraLocation.z,\n    // calculate angles\n    sinTx = Math.sin(cameraRotation.x),\n    cosTx = Math.cos(cameraRotation.x),\n    sinTy = Math.sin(cameraRotation.y),\n    cosTy = Math.cos(cameraRotation.y),\n    sinTz = Math.sin(cameraRotation.z),\n    cosTz = Math.cos(cameraRotation.z),\n    // calculate translation\n    dx = cosTy * (sinTz * (ay - cy) + cosTz * (ax - cx)) - sinTy * (az - cz),\n    dy =\n      sinTx *\n        (cosTy * (az - cz) + sinTy * (sinTz * (ay - cy) + cosTz * (ax - cx))) +\n      cosTx * (cosTz * (ay - cy) - sinTz * (ax - cx)),\n    dz =\n      cosTx *\n        (cosTy * (az - cz) + sinTy * (sinTz * (ay - cy) + cosTz * (ax - cx))) -\n      sinTx * (cosTz * (ay - cy) - sinTz * (ax - cx));\n\n  return new Point3d(dx, dy, dz);\n};\n\n/**\n * Convert a translation point to a point on the screen\n *\n * @param   {Point3d} translation A 3D point with parameters x, y, z This is\n *                                the translation of the point, seen from the\n *                                camera.\n * @returns {Point2d} point2d     A 2D point with parameters x, y\n */\nGraph3d.prototype._convertTranslationToScreen = function (translation) {\n  const ex = this.eye.x,\n    ey = this.eye.y,\n    ez = this.eye.z,\n    dx = translation.x,\n    dy = translation.y,\n    dz = translation.z;\n\n  // calculate position on screen from translation\n  let bx;\n  let by;\n  if (this.showPerspective) {\n    bx = (dx - ex) * (ez / dz);\n    by = (dy - ey) * (ez / dz);\n  } else {\n    bx = dx * -(ez / this.camera.getArmLength());\n    by = dy * -(ez / this.camera.getArmLength());\n  }\n\n  // shift and scale the point to the center of the screen\n  // use the width of the graph to scale both horizontally and vertically.\n  return new Point2d(\n    this.currentXCenter + bx * this.frame.canvas.clientWidth,\n    this.currentYCenter - by * this.frame.canvas.clientWidth\n  );\n};\n\n/**\n * Calculate the translations and screen positions of all points\n *\n * @param {Array.<Point3d>} points\n * @private\n */\nGraph3d.prototype._calcTranslations = function (points) {\n  for (let i = 0; i < points.length; i++) {\n    const point = points[i];\n    point.trans = this._convertPointToTranslation(point.point);\n    point.screen = this._convertTranslationToScreen(point.trans);\n\n    // calculate the translation of the point at the bottom (needed for sorting)\n    const transBottom = this._convertPointToTranslation(point.bottom);\n    point.dist = this.showPerspective ? transBottom.length() : -transBottom.z;\n  }\n\n  // sort the points on depth of their (x,y) position (not on z)\n  const sortDepth = function (a, b) {\n    return b.dist - a.dist;\n  };\n  points.sort(sortDepth);\n};\n\n/**\n * Transfer min/max values to the Graph3d instance.\n */\nGraph3d.prototype._initializeRanges = function () {\n  // TODO: later on, all min/maxes of all datagroups will be combined here\n  const dg = this.dataGroup;\n  this.xRange = dg.xRange;\n  this.yRange = dg.yRange;\n  this.zRange = dg.zRange;\n  this.valueRange = dg.valueRange;\n\n  // Values currently needed but which need to be sorted out for\n  // the multiple graph case.\n  this.xStep = dg.xStep;\n  this.yStep = dg.yStep;\n  this.zStep = dg.zStep;\n  this.xBarWidth = dg.xBarWidth;\n  this.yBarWidth = dg.yBarWidth;\n  this.colX = dg.colX;\n  this.colY = dg.colY;\n  this.colZ = dg.colZ;\n  this.colValue = dg.colValue;\n\n  // set the scale dependent on the ranges.\n  this._setScale();\n};\n\n/**\n * Return all data values as a list of Point3d objects\n *\n * @param {vis.DataSet} data\n * @returns {Array.<object>}\n */\nGraph3d.prototype.getDataPoints = function (data) {\n  const dataPoints = [];\n\n  for (let i = 0; i < data.length; i++) {\n    const point = new Point3d();\n    point.x = data[i][this.colX] || 0;\n    point.y = data[i][this.colY] || 0;\n    point.z = data[i][this.colZ] || 0;\n    point.data = data[i];\n    point.value = data[i][this.colValue] || 0;\n\n    const obj = {};\n    obj.point = point;\n    obj.bottom = new Point3d(point.x, point.y, this.zRange.min);\n    obj.trans = undefined;\n    obj.screen = undefined;\n\n    dataPoints.push(obj);\n  }\n\n  return dataPoints;\n};\n\n/**\n * Filter the data based on the current filter\n *\n * @param   {Array} data\n * @returns {Array} dataPoints Array with point objects which can be drawn on\n *                             screen\n */\nGraph3d.prototype._getDataPoints = function (data) {\n  // TODO: store the created matrix dataPoints in the filters instead of\n  //       reloading each time.\n  let x, y, i, obj;\n\n  let dataPoints = [];\n\n  if (\n    this.style === Graph3d.STYLE.GRID ||\n    this.style === Graph3d.STYLE.SURFACE\n  ) {\n    // copy all values from the data table to a matrix\n    // the provided values are supposed to form a grid of (x,y) positions\n\n    // create two lists with all present x and y values\n    const dataX = this.dataGroup.getDistinctValues(this.colX, data);\n    const dataY = this.dataGroup.getDistinctValues(this.colY, data);\n\n    dataPoints = this.getDataPoints(data);\n\n    // create a grid, a 2d matrix, with all values.\n    const dataMatrix = []; // temporary data matrix\n    for (i = 0; i < dataPoints.length; i++) {\n      obj = dataPoints[i];\n\n      // TODO: implement Array().indexOf() for Internet Explorer\n      const xIndex = dataX.indexOf(obj.point.x);\n      const yIndex = dataY.indexOf(obj.point.y);\n\n      if (dataMatrix[xIndex] === undefined) {\n        dataMatrix[xIndex] = [];\n      }\n\n      dataMatrix[xIndex][yIndex] = obj;\n    }\n\n    // fill in the pointers to the neighbors.\n    for (x = 0; x < dataMatrix.length; x++) {\n      for (y = 0; y < dataMatrix[x].length; y++) {\n        if (dataMatrix[x][y]) {\n          dataMatrix[x][y].pointRight =\n            x < dataMatrix.length - 1 ? dataMatrix[x + 1][y] : undefined;\n          dataMatrix[x][y].pointTop =\n            y < dataMatrix[x].length - 1 ? dataMatrix[x][y + 1] : undefined;\n          dataMatrix[x][y].pointCross =\n            x < dataMatrix.length - 1 && y < dataMatrix[x].length - 1\n              ? dataMatrix[x + 1][y + 1]\n              : undefined;\n        }\n      }\n    }\n  } else {\n    // 'dot', 'dot-line', etc.\n    dataPoints = this.getDataPoints(data);\n\n    if (this.style === Graph3d.STYLE.LINE) {\n      // Add next member points for line drawing\n      for (i = 0; i < dataPoints.length; i++) {\n        if (i > 0) {\n          dataPoints[i - 1].pointNext = dataPoints[i];\n        }\n      }\n    }\n  }\n\n  return dataPoints;\n};\n\n/**\n * Create the main frame for the Graph3d.\n *\n * This function is executed once when a Graph3d object is created. The frame\n * contains a canvas, and this canvas contains all objects like the axis and\n * nodes.\n */\nGraph3d.prototype.create = function () {\n  // remove all elements from the container element.\n  while (this.containerElement.hasChildNodes()) {\n    this.containerElement.removeChild(this.containerElement.firstChild);\n  }\n\n  this.frame = document.createElement(\"div\");\n  this.frame.style.position = \"relative\";\n  this.frame.style.overflow = \"hidden\";\n\n  // create the graph canvas (HTML canvas element)\n  this.frame.canvas = document.createElement(\"canvas\");\n  this.frame.canvas.style.position = \"relative\";\n  this.frame.appendChild(this.frame.canvas);\n  //if (!this.frame.canvas.getContext) {\n  {\n    const noCanvas = document.createElement(\"DIV\");\n    noCanvas.style.color = \"red\";\n    noCanvas.style.fontWeight = \"bold\";\n    noCanvas.style.padding = \"10px\";\n    noCanvas.innerHTML = \"Error: your browser does not support HTML canvas\";\n    this.frame.canvas.appendChild(noCanvas);\n  }\n\n  this.frame.filter = document.createElement(\"div\");\n  this.frame.filter.style.position = \"absolute\";\n  this.frame.filter.style.bottom = \"0px\";\n  this.frame.filter.style.left = \"0px\";\n  this.frame.filter.style.width = \"100%\";\n  this.frame.appendChild(this.frame.filter);\n\n  // add event listeners to handle moving and zooming the contents\n  const me = this;\n  const onmousedown = function (event) {\n    me._onMouseDown(event);\n  };\n  const ontouchstart = function (event) {\n    me._onTouchStart(event);\n  };\n  const onmousewheel = function (event) {\n    me._onWheel(event);\n  };\n  const ontooltip = function (event) {\n    me._onTooltip(event);\n  };\n  const onclick = function (event) {\n    me._onClick(event);\n  };\n  // TODO: these events are never cleaned up... can give a 'memory leakage'\n\n  util.addEventListener(this.frame.canvas, \"mousedown\", onmousedown);\n  util.addEventListener(this.frame.canvas, \"touchstart\", ontouchstart);\n  util.addEventListener(this.frame.canvas, \"mousewheel\", onmousewheel);\n  util.addEventListener(this.frame.canvas, \"mousemove\", ontooltip);\n  util.addEventListener(this.frame.canvas, \"click\", onclick);\n\n  // add the new graph to the container element\n  this.containerElement.appendChild(this.frame);\n};\n\n/**\n * Set a new size for the graph\n *\n * @param {number} width\n * @param {number} height\n * @private\n */\nGraph3d.prototype._setSize = function (width, height) {\n  this.frame.style.width = width;\n  this.frame.style.height = height;\n\n  this._resizeCanvas();\n};\n\n/**\n * Resize the canvas to the current size of the frame\n */\nGraph3d.prototype._resizeCanvas = function () {\n  this.frame.canvas.style.width = \"100%\";\n  this.frame.canvas.style.height = \"100%\";\n\n  this.frame.canvas.width = this.frame.canvas.clientWidth;\n  this.frame.canvas.height = this.frame.canvas.clientHeight;\n\n  // adjust with for margin\n  this.frame.filter.style.width = this.frame.canvas.clientWidth - 2 * 10 + \"px\";\n};\n\n/**\n * Start playing the animation, if requested and filter present. Only applicable\n * when animation data is available.\n */\nGraph3d.prototype.animationStart = function () {\n  // start animation when option is true\n  if (!this.animationAutoStart || !this.dataGroup.dataFilter) return;\n\n  if (!this.frame.filter || !this.frame.filter.slider)\n    throw new Error(\"No animation available\");\n\n  this.frame.filter.slider.play();\n};\n\n/**\n * Stop animation\n */\nGraph3d.prototype.animationStop = function () {\n  if (!this.frame.filter || !this.frame.filter.slider) return;\n\n  this.frame.filter.slider.stop();\n};\n\n/**\n * Resize the center position based on the current values in this.xCenter\n * and this.yCenter (which are strings with a percentage or a value\n * in pixels). The center positions are the variables this.currentXCenter\n * and this.currentYCenter\n */\nGraph3d.prototype._resizeCenter = function () {\n  // calculate the horizontal center position\n  if (this.xCenter.charAt(this.xCenter.length - 1) === \"%\") {\n    this.currentXCenter =\n      (parseFloat(this.xCenter) / 100) * this.frame.canvas.clientWidth;\n  } else {\n    this.currentXCenter = parseFloat(this.xCenter); // supposed to be in px\n  }\n\n  // calculate the vertical center position\n  if (this.yCenter.charAt(this.yCenter.length - 1) === \"%\") {\n    this.currentYCenter =\n      (parseFloat(this.yCenter) / 100) *\n      (this.frame.canvas.clientHeight - this.frame.filter.clientHeight);\n  } else {\n    this.currentYCenter = parseFloat(this.yCenter); // supposed to be in px\n  }\n};\n\n/**\n * Retrieve the current camera rotation\n *\n * @returns {object} An object with parameters horizontal, vertical, and\n *                   distance\n */\nGraph3d.prototype.getCameraPosition = function () {\n  const pos = this.camera.getArmRotation();\n  pos.distance = this.camera.getArmLength();\n  return pos;\n};\n\n/**\n * Load data into the 3D Graph\n *\n * @param {vis.DataSet} data\n * @private\n */\nGraph3d.prototype._readData = function (data) {\n  // read the data\n  this.dataPoints = this.dataGroup.initializeData(this, data, this.style);\n\n  this._initializeRanges();\n  this._redrawFilter();\n};\n\n/**\n * Replace the dataset of the Graph3d\n *\n * @param {Array | DataSet | DataView} data\n */\nGraph3d.prototype.setData = function (data) {\n  if (data === undefined || data === null) return;\n\n  this._readData(data);\n  this.redraw();\n  this.animationStart();\n};\n\n/**\n * Update the options. Options will be merged with current options\n *\n * @param {object} options\n */\nGraph3d.prototype.setOptions = function (options) {\n  if (options === undefined) return;\n\n  const errorFound = Validator.validate(options, allOptions);\n  if (errorFound === true) {\n    console.error(\n      \"%cErrors have been found in the supplied options object.\",\n      VALIDATOR_PRINT_STYLE\n    );\n  }\n\n  this.animationStop();\n\n  setOptions(options, this);\n  this.setPointDrawingMethod();\n  this._setSize(this.width, this.height);\n  this.setAxisLabelMethod();\n\n  this.setData(this.dataGroup.getDataTable());\n  this.animationStart();\n};\n\n/**\n * Determine which point drawing method to use for the current graph style.\n */\nGraph3d.prototype.setPointDrawingMethod = function () {\n  let method = undefined;\n\n  switch (this.style) {\n    case Graph3d.STYLE.BAR:\n      method = this._redrawBarGraphPoint;\n      break;\n    case Graph3d.STYLE.BARCOLOR:\n      method = this._redrawBarColorGraphPoint;\n      break;\n    case Graph3d.STYLE.BARSIZE:\n      method = this._redrawBarSizeGraphPoint;\n      break;\n    case Graph3d.STYLE.DOT:\n      method = this._redrawDotGraphPoint;\n      break;\n    case Graph3d.STYLE.DOTLINE:\n      method = this._redrawDotLineGraphPoint;\n      break;\n    case Graph3d.STYLE.DOTCOLOR:\n      method = this._redrawDotColorGraphPoint;\n      break;\n    case Graph3d.STYLE.DOTSIZE:\n      method = this._redrawDotSizeGraphPoint;\n      break;\n    case Graph3d.STYLE.SURFACE:\n      method = this._redrawSurfaceGraphPoint;\n      break;\n    case Graph3d.STYLE.GRID:\n      method = this._redrawGridGraphPoint;\n      break;\n    case Graph3d.STYLE.LINE:\n      method = this._redrawLineGraphPoint;\n      break;\n    default:\n      throw new Error(\n        \"Can not determine point drawing method \" +\n          \"for graph style '\" +\n          this.style +\n          \"'\"\n      );\n  }\n\n  this._pointDrawingMethod = method;\n};\n\n/**\n * Determine which functions to use to draw axis labels.\n */\nGraph3d.prototype.setAxisLabelMethod = function () {\n  if (this.rotateAxisLabels) {\n    this._drawAxisLabelX = this.drawAxisLabelXRotate;\n    this._drawAxisLabelY = this.drawAxisLabelYRotate;\n    this._drawAxisLabelZ = this.drawAxisLabelZRotate;\n  } else {\n    this._drawAxisLabelX = this.drawAxisLabelX;\n    this._drawAxisLabelY = this.drawAxisLabelY;\n    this._drawAxisLabelZ = this.drawAxisLabelZ;\n  }\n};\n\n/**\n * Redraw the Graph.\n */\nGraph3d.prototype.redraw = function () {\n  if (this.dataPoints === undefined) {\n    throw new Error(\"Graph data not initialized\");\n  }\n\n  this._resizeCanvas();\n  this._resizeCenter();\n  this._redrawSlider();\n  this._redrawClear();\n  this._redrawAxis();\n\n  this._redrawDataGraph();\n\n  this._redrawInfo();\n  this._redrawLegend();\n};\n\n/**\n * Get drawing context without exposing canvas\n *\n * @returns {CanvasRenderingContext2D}\n * @private\n */\nGraph3d.prototype._getContext = function () {\n  const canvas = this.frame.canvas;\n  const ctx = canvas.getContext(\"2d\");\n\n  ctx.lineJoin = \"round\";\n  ctx.lineCap = \"round\";\n\n  return ctx;\n};\n\n/**\n * Clear the canvas before redrawing\n */\nGraph3d.prototype._redrawClear = function () {\n  const canvas = this.frame.canvas;\n  const ctx = canvas.getContext(\"2d\");\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n};\n\nGraph3d.prototype._dotSize = function () {\n  return this.frame.clientWidth * this.dotSizeRatio;\n};\n\n/**\n * Get legend width\n *\n * @returns {*}\n * @private\n */\nGraph3d.prototype._getLegendWidth = function () {\n  let width;\n\n  if (this.style === Graph3d.STYLE.DOTSIZE) {\n    const dotSize = this._dotSize();\n    //width =  dotSize / 2 + dotSize * 2;\n    width = dotSize * this.dotSizeMaxFraction;\n  } else if (this.style === Graph3d.STYLE.BARSIZE) {\n    width = this.xBarWidth;\n  } else {\n    width = 20;\n  }\n  return width;\n};\n\n/**\n * Redraw the legend based on size, dot color, or surface height\n */\nGraph3d.prototype._redrawLegend = function () {\n  //Return without drawing anything, if no legend is specified\n  if (this.showLegend !== true) {\n    return;\n  }\n\n  // Do not draw legend when graph style does not support\n  if (\n    this.style === Graph3d.STYLE.LINE ||\n    this.style === Graph3d.STYLE.BARSIZE //TODO add legend support for BARSIZE\n  ) {\n    return;\n  }\n\n  // Legend types - size and color. Determine if size legend.\n  const isSizeLegend =\n    this.style === Graph3d.STYLE.BARSIZE ||\n    this.style === Graph3d.STYLE.DOTSIZE;\n\n  // Legend is either tracking z values or style values. This flag if false means use z values.\n  const isValueLegend =\n    this.style === Graph3d.STYLE.DOTSIZE ||\n    this.style === Graph3d.STYLE.DOTCOLOR ||\n    this.style === Graph3d.STYLE.SURFACE ||\n    this.style === Graph3d.STYLE.BARCOLOR;\n\n  const height = Math.max(this.frame.clientHeight * 0.25, 100);\n  const top = this.margin;\n  const width = this._getLegendWidth(); // px - overwritten by size legend\n  const right = this.frame.clientWidth - this.margin;\n  const left = right - width;\n  const bottom = top + height;\n\n  const ctx = this._getContext();\n  ctx.lineWidth = 1;\n  ctx.font = \"14px arial\"; // TODO: put in options\n\n  if (isSizeLegend === false) {\n    // draw the color bar\n    const ymin = 0;\n    const ymax = height; // Todo: make height customizable\n    let y;\n\n    for (y = ymin; y < ymax; y++) {\n      // Need (1 - x) because y runs from top to bottom:\n      const f = 1 - (y - ymin) / (ymax - ymin);\n      const color = this._colormap(f, 1);\n\n      ctx.strokeStyle = color;\n      ctx.beginPath();\n      ctx.moveTo(left, top + y);\n      ctx.lineTo(right, top + y);\n      ctx.stroke();\n    }\n    ctx.strokeStyle = this.axisColor;\n    ctx.strokeRect(left, top, width, height);\n  } else {\n    // draw the size legend box\n    let widthMin;\n    if (this.style === Graph3d.STYLE.DOTSIZE) {\n      // Get the proportion to max and min right\n      widthMin = width * (this.dotSizeMinFraction / this.dotSizeMaxFraction);\n    } else if (this.style === Graph3d.STYLE.BARSIZE) {\n      //widthMin = this.xBarWidth * 0.2 this is wrong - barwidth measures in terms of xvalues\n    }\n    ctx.strokeStyle = this.axisColor;\n    ctx.fillStyle = this.dataColor.fill;\n    ctx.beginPath();\n    ctx.moveTo(left, top);\n    ctx.lineTo(right, top);\n    ctx.lineTo(left + widthMin, bottom);\n    ctx.lineTo(left, bottom);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  // print value text along the legend edge\n  const gridLineLen = 5; // px\n\n  const legendMin = isValueLegend ? this.valueRange.min : this.zRange.min;\n  const legendMax = isValueLegend ? this.valueRange.max : this.zRange.max;\n  const step = new StepNumber(\n    legendMin,\n    legendMax,\n    (legendMax - legendMin) / 5,\n    true\n  );\n  step.start(true);\n\n  while (!step.end()) {\n    const y =\n      bottom -\n      ((step.getCurrent() - legendMin) / (legendMax - legendMin)) * height;\n    const from = new Point2d(left - gridLineLen, y);\n    const to = new Point2d(left, y);\n    this._line(ctx, from, to);\n\n    ctx.textAlign = \"right\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(step.getCurrent(), left - 2 * gridLineLen, y);\n\n    step.next();\n  }\n\n  ctx.textAlign = \"right\";\n  ctx.textBaseline = \"top\";\n  const label = this.legendLabel;\n  ctx.fillText(label, right, bottom + this.margin);\n};\n\n/**\n * Redraw the filter\n */\nGraph3d.prototype._redrawFilter = function () {\n  const dataFilter = this.dataGroup.dataFilter;\n  const filter = this.frame.filter;\n  filter.innerHTML = \"\";\n\n  if (!dataFilter) {\n    filter.slider = undefined;\n    return;\n  }\n\n  const options = {\n    visible: this.showAnimationControls,\n  };\n  const slider = new Slider(filter, options);\n  filter.slider = slider;\n\n  // TODO: css here is not nice here...\n  filter.style.padding = \"10px\";\n  //this.frame.filter.style.backgroundColor = '#EFEFEF';\n\n  slider.setValues(dataFilter.values);\n  slider.setPlayInterval(this.animationInterval);\n\n  // create an event handler\n  const me = this;\n  const onchange = function () {\n    const dataFilter = me.dataGroup.dataFilter;\n    const index = slider.getIndex();\n\n    dataFilter.selectValue(index);\n    me.dataPoints = dataFilter._getDataPoints();\n\n    me.redraw();\n  };\n\n  slider.setOnChangeCallback(onchange);\n};\n\n/**\n * Redraw the slider\n */\nGraph3d.prototype._redrawSlider = function () {\n  if (this.frame.filter.slider !== undefined) {\n    this.frame.filter.slider.redraw();\n  }\n};\n\n/**\n * Redraw common information\n */\nGraph3d.prototype._redrawInfo = function () {\n  const info = this.dataGroup.getInfo();\n  if (info === undefined) return;\n\n  const ctx = this._getContext();\n\n  ctx.font = \"14px arial\"; // TODO: put in options\n  ctx.lineStyle = \"gray\";\n  ctx.fillStyle = \"gray\";\n  ctx.textAlign = \"left\";\n  ctx.textBaseline = \"top\";\n\n  const x = this.margin;\n  const y = this.margin;\n  ctx.fillText(info, x, y);\n};\n\n/**\n * Draw a line between 2d points 'from' and 'to'.\n *\n * If stroke style specified, set that as well.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point2d} from\n * @param {vis.Point2d} to\n * @param {string} [strokeStyle]\n * @private\n */\nGraph3d.prototype._line = function (ctx, from, to, strokeStyle) {\n  if (strokeStyle !== undefined) {\n    ctx.strokeStyle = strokeStyle;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(from.x, from.y);\n  ctx.lineTo(to.x, to.y);\n  ctx.stroke();\n};\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} armAngle\n * @param {number} [yMargin=0]\n */\nGraph3d.prototype.drawAxisLabelX = function (\n  ctx,\n  point3d,\n  text,\n  armAngle,\n  yMargin\n) {\n  if (yMargin === undefined) {\n    yMargin = 0;\n  }\n\n  const point2d = this._convert3Dto2D(point3d);\n\n  if (Math.cos(armAngle * 2) > 0) {\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    point2d.y += yMargin;\n  } else if (Math.sin(armAngle * 2) < 0) {\n    ctx.textAlign = \"right\";\n    ctx.textBaseline = \"middle\";\n  } else {\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"middle\";\n  }\n\n  ctx.fillStyle = this.axisColor;\n  ctx.fillText(text, point2d.x, point2d.y);\n};\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} armAngle\n * @param {number} [yMargin=0]\n */\nGraph3d.prototype.drawAxisLabelY = function (\n  ctx,\n  point3d,\n  text,\n  armAngle,\n  yMargin\n) {\n  if (yMargin === undefined) {\n    yMargin = 0;\n  }\n\n  const point2d = this._convert3Dto2D(point3d);\n\n  if (Math.cos(armAngle * 2) < 0) {\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    point2d.y += yMargin;\n  } else if (Math.sin(armAngle * 2) > 0) {\n    ctx.textAlign = \"right\";\n    ctx.textBaseline = \"middle\";\n  } else {\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"middle\";\n  }\n\n  ctx.fillStyle = this.axisColor;\n  ctx.fillText(text, point2d.x, point2d.y);\n};\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} [offset=0]\n */\nGraph3d.prototype.drawAxisLabelZ = function (ctx, point3d, text, offset) {\n  if (offset === undefined) {\n    offset = 0;\n  }\n\n  const point2d = this._convert3Dto2D(point3d);\n  ctx.textAlign = \"right\";\n  ctx.textBaseline = \"middle\";\n  ctx.fillStyle = this.axisColor;\n  ctx.fillText(text, point2d.x - offset, point2d.y);\n};\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} armAngle\n * @param {number} [yMargin=0]\n */\nGraph3d.prototype.drawAxisLabelXRotate = function (\n  ctx,\n  point3d,\n  text,\n  armAngle,\n  yMargin\n) {\n  if (yMargin === undefined) {\n    yMargin = 0;\n  }\n\n  const point2d = this._convert3Dto2D(point3d);\n  if (Math.cos(armAngle * 2) > 0) {\n    ctx.save();\n    ctx.translate(point2d.x, point2d.y);\n    ctx.rotate(-Math.PI / 2);\n    ctx.textAlign = \"right\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, 0, 0);\n    ctx.restore();\n  } else if (Math.sin(armAngle * 2) < 0) {\n    ctx.textAlign = \"right\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, point2d.x, point2d.y);\n  } else {\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, point2d.x, point2d.y);\n  }\n};\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} armAngle\n * @param {number} [yMargin=0]\n */\nGraph3d.prototype.drawAxisLabelYRotate = function (\n  ctx,\n  point3d,\n  text,\n  armAngle,\n  yMargin\n) {\n  if (yMargin === undefined) {\n    yMargin = 0;\n  }\n\n  const point2d = this._convert3Dto2D(point3d);\n  if (Math.cos(armAngle * 2) < 0) {\n    ctx.save();\n    ctx.translate(point2d.x, point2d.y);\n    ctx.rotate(-Math.PI / 2);\n    ctx.textAlign = \"right\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, 0, 0);\n    ctx.restore();\n  } else if (Math.sin(armAngle * 2) > 0) {\n    ctx.textAlign = \"right\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, point2d.x, point2d.y);\n  } else {\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, point2d.x, point2d.y);\n  }\n};\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} [offset=0]\n */\nGraph3d.prototype.drawAxisLabelZRotate = function (ctx, point3d, text, offset) {\n  if (offset === undefined) {\n    offset = 0;\n  }\n\n  const point2d = this._convert3Dto2D(point3d);\n  ctx.textAlign = \"right\";\n  ctx.textBaseline = \"middle\";\n  ctx.fillStyle = this.axisColor;\n  ctx.fillText(text, point2d.x - offset, point2d.y);\n};\n\n/**\n \n \n/**\n * Draw a line between 2d points 'from' and 'to'.\n *\n * If stroke style specified, set that as well.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point2d} from\n * @param {vis.Point2d} to\n * @param {string} [strokeStyle]\n * @private\n */\nGraph3d.prototype._line3d = function (ctx, from, to, strokeStyle) {\n  const from2d = this._convert3Dto2D(from);\n  const to2d = this._convert3Dto2D(to);\n\n  this._line(ctx, from2d, to2d, strokeStyle);\n};\n\n/**\n * Redraw the axis\n */\nGraph3d.prototype._redrawAxis = function () {\n  const ctx = this._getContext();\n  let from,\n    to,\n    step,\n    prettyStep,\n    text,\n    xText,\n    yText,\n    zText,\n    offset,\n    xOffset,\n    yOffset;\n\n  // TODO: get the actual rendered style of the containerElement\n  //ctx.font = this.containerElement.style.font;\n  //ctx.font = 24 / this.camera.getArmLength() + 'px arial';\n  ctx.font =\n    this.axisFontSize / this.camera.getArmLength() + \"px \" + this.axisFontType;\n\n  // calculate the length for the short grid lines\n  const gridLenX = 0.025 / this.scale.x;\n  const gridLenY = 0.025 / this.scale.y;\n  const textMargin = 5 / this.camera.getArmLength(); // px\n  const armAngle = this.camera.getArmRotation().horizontal;\n  const armVector = new Point2d(Math.cos(armAngle), Math.sin(armAngle));\n\n  const xRange = this.xRange;\n  const yRange = this.yRange;\n  const zRange = this.zRange;\n  let point3d;\n\n  // draw x-grid lines\n  ctx.lineWidth = 1;\n  prettyStep = this.defaultXStep === undefined;\n  step = new StepNumber(xRange.min, xRange.max, this.xStep, prettyStep);\n  step.start(true);\n\n  while (!step.end()) {\n    const x = step.getCurrent();\n\n    if (this.showGrid) {\n      from = new Point3d(x, yRange.min, zRange.min);\n      to = new Point3d(x, yRange.max, zRange.min);\n      this._line3d(ctx, from, to, this.gridColor);\n    } else if (this.showXAxis) {\n      from = new Point3d(x, yRange.min, zRange.min);\n      to = new Point3d(x, yRange.min + gridLenX, zRange.min);\n      this._line3d(ctx, from, to, this.axisColor);\n\n      from = new Point3d(x, yRange.max, zRange.min);\n      to = new Point3d(x, yRange.max - gridLenX, zRange.min);\n      this._line3d(ctx, from, to, this.axisColor);\n    }\n\n    if (this.showXAxis) {\n      yText = armVector.x > 0 ? yRange.min : yRange.max;\n      point3d = new Point3d(x, yText, zRange.min);\n      const msg = \"  \" + this.xValueLabel(x) + \"  \";\n      this._drawAxisLabelX.call(this, ctx, point3d, msg, armAngle, textMargin);\n    }\n\n    step.next();\n  }\n\n  // draw y-grid lines\n  ctx.lineWidth = 1;\n  prettyStep = this.defaultYStep === undefined;\n  step = new StepNumber(yRange.min, yRange.max, this.yStep, prettyStep);\n  step.start(true);\n\n  while (!step.end()) {\n    const y = step.getCurrent();\n\n    if (this.showGrid) {\n      from = new Point3d(xRange.min, y, zRange.min);\n      to = new Point3d(xRange.max, y, zRange.min);\n      this._line3d(ctx, from, to, this.gridColor);\n    } else if (this.showYAxis) {\n      from = new Point3d(xRange.min, y, zRange.min);\n      to = new Point3d(xRange.min + gridLenY, y, zRange.min);\n      this._line3d(ctx, from, to, this.axisColor);\n\n      from = new Point3d(xRange.max, y, zRange.min);\n      to = new Point3d(xRange.max - gridLenY, y, zRange.min);\n      this._line3d(ctx, from, to, this.axisColor);\n    }\n\n    if (this.showYAxis) {\n      xText = armVector.y > 0 ? xRange.min : xRange.max;\n      point3d = new Point3d(xText, y, zRange.min);\n      const msg = \"  \" + this.yValueLabel(y) + \"  \";\n      this._drawAxisLabelY.call(this, ctx, point3d, msg, armAngle, textMargin);\n    }\n\n    step.next();\n  }\n\n  // draw z-grid lines and axis\n  if (this.showZAxis) {\n    ctx.lineWidth = 1;\n    prettyStep = this.defaultZStep === undefined;\n    step = new StepNumber(zRange.min, zRange.max, this.zStep, prettyStep);\n    step.start(true);\n\n    xText = armVector.x > 0 ? xRange.min : xRange.max;\n    yText = armVector.y < 0 ? yRange.min : yRange.max;\n\n    while (!step.end()) {\n      const z = step.getCurrent();\n\n      // TODO: make z-grid lines really 3d?\n      const from3d = new Point3d(xText, yText, z);\n      const from2d = this._convert3Dto2D(from3d);\n      to = new Point2d(from2d.x - textMargin, from2d.y);\n      this._line(ctx, from2d, to, this.axisColor);\n\n      const msg = this.zValueLabel(z) + \" \";\n      this._drawAxisLabelZ.call(this, ctx, from3d, msg, 5);\n\n      step.next();\n    }\n\n    ctx.lineWidth = 1;\n    from = new Point3d(xText, yText, zRange.min);\n    to = new Point3d(xText, yText, zRange.max);\n    this._line3d(ctx, from, to, this.axisColor);\n  }\n\n  // draw x-axis\n  if (this.showXAxis) {\n    let xMin2d;\n    let xMax2d;\n    ctx.lineWidth = 1;\n\n    // line at yMin\n    xMin2d = new Point3d(xRange.min, yRange.min, zRange.min);\n    xMax2d = new Point3d(xRange.max, yRange.min, zRange.min);\n    this._line3d(ctx, xMin2d, xMax2d, this.axisColor);\n    // line at ymax\n    xMin2d = new Point3d(xRange.min, yRange.max, zRange.min);\n    xMax2d = new Point3d(xRange.max, yRange.max, zRange.min);\n    this._line3d(ctx, xMin2d, xMax2d, this.axisColor);\n  }\n\n  // draw y-axis\n  if (this.showYAxis) {\n    ctx.lineWidth = 1;\n    // line at xMin\n    from = new Point3d(xRange.min, yRange.min, zRange.min);\n    to = new Point3d(xRange.min, yRange.max, zRange.min);\n    this._line3d(ctx, from, to, this.axisColor);\n    // line at xMax\n    from = new Point3d(xRange.max, yRange.min, zRange.min);\n    to = new Point3d(xRange.max, yRange.max, zRange.min);\n    this._line3d(ctx, from, to, this.axisColor);\n  }\n\n  // draw x-label\n  const xLabel = this.xLabel;\n  if (xLabel.length > 0 && this.showXAxis) {\n    yOffset = 0.1 / this.scale.y;\n    xText = (xRange.max + 3 * xRange.min) / 4;\n    yText = armVector.x > 0 ? yRange.min - yOffset : yRange.max + yOffset;\n    text = new Point3d(xText, yText, zRange.min);\n    this.drawAxisLabelX(ctx, text, xLabel, armAngle);\n  }\n\n  // draw y-label\n  const yLabel = this.yLabel;\n  if (yLabel.length > 0 && this.showYAxis) {\n    xOffset = 0.1 / this.scale.x;\n    xText = armVector.y > 0 ? xRange.min - xOffset : xRange.max + xOffset;\n    yText = (yRange.max + 3 * yRange.min) / 4;\n    text = new Point3d(xText, yText, zRange.min);\n\n    this.drawAxisLabelY(ctx, text, yLabel, armAngle);\n  }\n\n  // draw z-label\n  const zLabel = this.zLabel;\n  if (zLabel.length > 0 && this.showZAxis) {\n    offset = 30; // pixels.  // TODO: relate to the max width of the values on the z axis?\n    xText = armVector.x > 0 ? xRange.min : xRange.max;\n    yText = armVector.y < 0 ? yRange.min : yRange.max;\n    zText = (zRange.max + 3 * zRange.min) / 4;\n    text = new Point3d(xText, yText, zText);\n\n    this.drawAxisLabelZ(ctx, text, zLabel, offset);\n  }\n};\n\n/**\n *\n * @param {vis.Point3d} point\n * @returns {*}\n * @private\n */\nGraph3d.prototype._getStrokeWidth = function (point) {\n  if (point !== undefined) {\n    if (this.showPerspective) {\n      return (1 / -point.trans.z) * this.dataColor.strokeWidth;\n    } else {\n      return (\n        -(this.eye.z / this.camera.getArmLength()) * this.dataColor.strokeWidth\n      );\n    }\n  }\n\n  return this.dataColor.strokeWidth;\n};\n\n// -----------------------------------------------------------------------------\n// Drawing primitives for the graphs\n// -----------------------------------------------------------------------------\n\n/**\n * Draw a bar element in the view with the given properties.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @param {number} xWidth\n * @param {number} yWidth\n * @param {string} color\n * @param {string} borderColor\n * @private\n */\nGraph3d.prototype._redrawBar = function (\n  ctx,\n  point,\n  xWidth,\n  yWidth,\n  color,\n  borderColor\n) {\n  let surface;\n\n  // calculate all corner points\n  const me = this;\n  const point3d = point.point;\n  const zMin = this.zRange.min;\n  const top = [\n    { point: new Point3d(point3d.x - xWidth, point3d.y - yWidth, point3d.z) },\n    { point: new Point3d(point3d.x + xWidth, point3d.y - yWidth, point3d.z) },\n    { point: new Point3d(point3d.x + xWidth, point3d.y + yWidth, point3d.z) },\n    { point: new Point3d(point3d.x - xWidth, point3d.y + yWidth, point3d.z) },\n  ];\n  const bottom = [\n    { point: new Point3d(point3d.x - xWidth, point3d.y - yWidth, zMin) },\n    { point: new Point3d(point3d.x + xWidth, point3d.y - yWidth, zMin) },\n    { point: new Point3d(point3d.x + xWidth, point3d.y + yWidth, zMin) },\n    { point: new Point3d(point3d.x - xWidth, point3d.y + yWidth, zMin) },\n  ];\n\n  // calculate screen location of the points\n  top.forEach(function (obj) {\n    obj.screen = me._convert3Dto2D(obj.point);\n  });\n  bottom.forEach(function (obj) {\n    obj.screen = me._convert3Dto2D(obj.point);\n  });\n\n  // create five sides, calculate both corner points and center points\n  const surfaces = [\n    { corners: top, center: Point3d.avg(bottom[0].point, bottom[2].point) },\n    {\n      corners: [top[0], top[1], bottom[1], bottom[0]],\n      center: Point3d.avg(bottom[1].point, bottom[0].point),\n    },\n    {\n      corners: [top[1], top[2], bottom[2], bottom[1]],\n      center: Point3d.avg(bottom[2].point, bottom[1].point),\n    },\n    {\n      corners: [top[2], top[3], bottom[3], bottom[2]],\n      center: Point3d.avg(bottom[3].point, bottom[2].point),\n    },\n    {\n      corners: [top[3], top[0], bottom[0], bottom[3]],\n      center: Point3d.avg(bottom[0].point, bottom[3].point),\n    },\n  ];\n  point.surfaces = surfaces;\n\n  // calculate the distance of each of the surface centers to the camera\n  for (let j = 0; j < surfaces.length; j++) {\n    surface = surfaces[j];\n    const transCenter = this._convertPointToTranslation(surface.center);\n    surface.dist = this.showPerspective ? transCenter.length() : -transCenter.z;\n    // TODO: this dept calculation doesn't work 100% of the cases due to perspective,\n    //     but the current solution is fast/simple and works in 99.9% of all cases\n    //     the issue is visible in example 14, with graph.setCameraPosition({horizontal: 2.97, vertical: 0.5, distance: 0.9})\n  }\n\n  // order the surfaces by their (translated) depth\n  surfaces.sort(function (a, b) {\n    const diff = b.dist - a.dist;\n    if (diff) return diff;\n\n    // if equal depth, sort the top surface last\n    if (a.corners === top) return 1;\n    if (b.corners === top) return -1;\n\n    // both are equal\n    return 0;\n  });\n\n  // draw the ordered surfaces\n  ctx.lineWidth = this._getStrokeWidth(point);\n  ctx.strokeStyle = borderColor;\n  ctx.fillStyle = color;\n  // NOTE: we start at j=2 instead of j=0 as we don't need to draw the two surfaces at the backside\n  for (let j = 2; j < surfaces.length; j++) {\n    surface = surfaces[j];\n    this._polygon(ctx, surface.corners);\n  }\n};\n\n/**\n * Draw a polygon using the passed points and fill it with the passed style and stroke.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Array.<vis.Point3d>} points      an array of points.\n * @param {string} [fillStyle] the fill style to set\n * @param {string} [strokeStyle] the stroke style to set\n */\nGraph3d.prototype._polygon = function (ctx, points, fillStyle, strokeStyle) {\n  if (points.length < 2) {\n    return;\n  }\n\n  if (fillStyle !== undefined) {\n    ctx.fillStyle = fillStyle;\n  }\n  if (strokeStyle !== undefined) {\n    ctx.strokeStyle = strokeStyle;\n  }\n  ctx.beginPath();\n  ctx.moveTo(points[0].screen.x, points[0].screen.y);\n\n  for (let i = 1; i < points.length; ++i) {\n    const point = points[i];\n    ctx.lineTo(point.screen.x, point.screen.y);\n  }\n\n  ctx.closePath();\n  ctx.fill();\n  ctx.stroke(); // TODO: only draw stroke when strokeWidth > 0\n};\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @param {string} color\n * @param {string} borderColor\n * @param {number} [size=this._dotSize()]\n * @private\n */\nGraph3d.prototype._drawCircle = function (\n  ctx,\n  point,\n  color,\n  borderColor,\n  size\n) {\n  const radius = this._calcRadius(point, size);\n\n  ctx.lineWidth = this._getStrokeWidth(point);\n  ctx.strokeStyle = borderColor;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.arc(point.screen.x, point.screen.y, radius, 0, Math.PI * 2, true);\n  ctx.fill();\n  ctx.stroke();\n};\n\n/**\n * Determine the colors for the 'regular' graph styles.\n *\n * @param {object} point\n * @returns {{fill, border}}\n * @private\n */\nGraph3d.prototype._getColorsRegular = function (point) {\n  const f = (point.point.value - this.valueRange.min) * this.scale.value;\n  const color = this._colormap(f, 1);\n  const borderColor = this._colormap(f, 0.8);\n  return {\n    fill: color,\n    border: borderColor,\n  };\n};\n\n/**\n * Get the colors for the 'color' graph styles.\n * These styles are currently: 'bar-color' and 'dot-color'\n * Color may be set as a string representation of HTML color, like #ff00ff,\n * or calculated from a number, for example, distance from this point\n * The first option is useful when we have some pre-given legend, to which we have to adjust ourselves\n * The second option is useful when we are interested in automatically setting the color, from some value,\n * using some color scale\n *\n * @param {object} point\n * @returns {{fill: *, border: *}}\n * @private\n */\nGraph3d.prototype._getColorsColor = function (point) {\n  // calculate the color based on the value\n  let color, borderColor, pointStyle;\n  if (point && point.point && point.point.data && point.point.data.style) {\n    pointStyle = point.point.data.style;\n  }\n  if (\n    pointStyle &&\n    typeof pointStyle === \"object\" &&\n    pointStyle.fill &&\n    pointStyle.stroke\n  ) {\n    return {\n      fill: pointStyle.fill,\n      border: pointStyle.stroke,\n    };\n  }\n\n  if (typeof point.point.value === \"string\") {\n    color = point.point.value;\n    borderColor = point.point.value;\n  } else {\n    const f = (point.point.value - this.valueRange.min) * this.scale.value;\n    color = this._colormap(f, 1);\n    borderColor = this._colormap(f, 0.8);\n  }\n  return {\n    fill: color,\n    border: borderColor,\n  };\n};\n\n/**\n * Get the colors for the 'size' graph styles.\n * These styles are currently: 'bar-size' and 'dot-size'\n *\n * @returns {{fill: *, border: (string|colorOptions.stroke|{string, undefined}|string|colorOptions.stroke|{string}|*)}}\n * @private\n */\nGraph3d.prototype._getColorsSize = function () {\n  return {\n    fill: this.dataColor.fill,\n    border: this.dataColor.stroke,\n  };\n};\n\n/**\n * Determine the color corresponding to a given value on the color scale.\n *\n * @param {number} [x] the data value to be mapped running from 0 to 1\n * @param {number} [v] scale factor between 0 and 1 for the color brightness\n * @returns {string}\n * @private\n */\nGraph3d.prototype._colormap = function (x, v = 1) {\n  let r, g, b, a;\n  const colormap = this.colormap;\n  if (Array.isArray(colormap)) {\n    const maxIndex = colormap.length - 1;\n    const startIndex = Math.max(Math.floor(x * maxIndex), 0);\n    const endIndex = Math.min(startIndex + 1, maxIndex);\n    const innerRatio = x * maxIndex - startIndex;\n    const min = colormap[startIndex];\n    const max = colormap[endIndex];\n    r = min.r + innerRatio * (max.r - min.r);\n    g = min.g + innerRatio * (max.g - min.g);\n    b = min.b + innerRatio * (max.b - min.b);\n  } else if (typeof colormap === \"function\") {\n    ({ r, g, b, a } = colormap(x));\n  } else {\n    const hue = (1 - x) * 240;\n    ({ r, g, b } = util.HSVToRGB(hue / 360, 1, 1));\n  }\n  if (typeof a === \"number\" && !Number.isNaN(a)) {\n    return `RGBA(${Math.round(r * v)}, ${Math.round(g * v)}, ${Math.round(\n      b * v\n    )}, ${a})`;\n  } else {\n    return `RGB(${Math.round(r * v)}, ${Math.round(g * v)}, ${Math.round(\n      b * v\n    )})`;\n  }\n};\n\n/**\n * Determine the size of a point on-screen, as determined by the\n * distance to the camera.\n *\n * @param {object} point\n * @param {number} [size=this._dotSize()] the size that needs to be translated to screen coordinates.\n *             optional; if not passed, use the default point size.\n * @returns {number}\n * @private\n */\nGraph3d.prototype._calcRadius = function (point, size) {\n  if (size === undefined) {\n    size = this._dotSize();\n  }\n\n  let radius;\n  if (this.showPerspective) {\n    radius = size / -point.trans.z;\n  } else {\n    radius = size * -(this.eye.z / this.camera.getArmLength());\n  }\n  if (radius < 0) {\n    radius = 0;\n  }\n\n  return radius;\n};\n\n// -----------------------------------------------------------------------------\n// Methods for drawing points per graph style.\n// -----------------------------------------------------------------------------\n\n/**\n * Draw single datapoint for graph style 'bar'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @private\n */\nGraph3d.prototype._redrawBarGraphPoint = function (ctx, point) {\n  const xWidth = this.xBarWidth / 2;\n  const yWidth = this.yBarWidth / 2;\n  const colors = this._getColorsRegular(point);\n\n  this._redrawBar(ctx, point, xWidth, yWidth, colors.fill, colors.border);\n};\n\n/**\n * Draw single datapoint for graph style 'bar-color'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @private\n */\nGraph3d.prototype._redrawBarColorGraphPoint = function (ctx, point) {\n  const xWidth = this.xBarWidth / 2;\n  const yWidth = this.yBarWidth / 2;\n  const colors = this._getColorsColor(point);\n\n  this._redrawBar(ctx, point, xWidth, yWidth, colors.fill, colors.border);\n};\n\n/**\n * Draw single datapoint for graph style 'bar-size'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @private\n */\nGraph3d.prototype._redrawBarSizeGraphPoint = function (ctx, point) {\n  // calculate size for the bar\n  const fraction =\n    (point.point.value - this.valueRange.min) / this.valueRange.range();\n  const xWidth = (this.xBarWidth / 2) * (fraction * 0.8 + 0.2);\n  const yWidth = (this.yBarWidth / 2) * (fraction * 0.8 + 0.2);\n\n  const colors = this._getColorsSize();\n\n  this._redrawBar(ctx, point, xWidth, yWidth, colors.fill, colors.border);\n};\n\n/**\n * Draw single datapoint for graph style 'dot'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @private\n */\nGraph3d.prototype._redrawDotGraphPoint = function (ctx, point) {\n  const colors = this._getColorsRegular(point);\n\n  this._drawCircle(ctx, point, colors.fill, colors.border);\n};\n\n/**\n * Draw single datapoint for graph style 'dot-line'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @private\n */\nGraph3d.prototype._redrawDotLineGraphPoint = function (ctx, point) {\n  // draw a vertical line from the XY-plane to the graph value\n  const from = this._convert3Dto2D(point.bottom);\n  ctx.lineWidth = 1;\n  this._line(ctx, from, point.screen, this.gridColor);\n\n  this._redrawDotGraphPoint(ctx, point);\n};\n\n/**\n * Draw single datapoint for graph style 'dot-color'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @private\n */\nGraph3d.prototype._redrawDotColorGraphPoint = function (ctx, point) {\n  const colors = this._getColorsColor(point);\n\n  this._drawCircle(ctx, point, colors.fill, colors.border);\n};\n\n/**\n * Draw single datapoint for graph style 'dot-size'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @private\n */\nGraph3d.prototype._redrawDotSizeGraphPoint = function (ctx, point) {\n  const dotSize = this._dotSize();\n  const fraction =\n    (point.point.value - this.valueRange.min) / this.valueRange.range();\n\n  const sizeMin = dotSize * this.dotSizeMinFraction;\n  const sizeRange = dotSize * this.dotSizeMaxFraction - sizeMin;\n  const size = sizeMin + sizeRange * fraction;\n\n  const colors = this._getColorsSize();\n\n  this._drawCircle(ctx, point, colors.fill, colors.border, size);\n};\n\n/**\n * Draw single datapoint for graph style 'surface'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @private\n */\nGraph3d.prototype._redrawSurfaceGraphPoint = function (ctx, point) {\n  const right = point.pointRight;\n  const top = point.pointTop;\n  const cross = point.pointCross;\n\n  if (\n    point === undefined ||\n    right === undefined ||\n    top === undefined ||\n    cross === undefined\n  ) {\n    return;\n  }\n\n  let topSideVisible = true;\n  let fillStyle;\n  let strokeStyle;\n  let cosViewAngle;\n\n  if (this.showGrayBottom || this.showShadow) {\n    // calculate the cross product of the two vectors from center\n    // to left and right, in order to know whether we are looking at the\n    // bottom or at the top side. We can also use the cross product\n    // for calculating light intensity\n    const aDiff = Point3d.subtract(cross.trans, point.trans);\n    const bDiff = Point3d.subtract(top.trans, right.trans);\n    const surfaceNormal = Point3d.crossProduct(aDiff, bDiff);\n\n    if (this.showPerspective) {\n      const surfacePosition = Point3d.avg(\n        Point3d.avg(point.trans, cross.trans),\n        Point3d.avg(right.trans, top.trans)\n      );\n      // This corresponds to diffuse lighting with light source at (0, 0, 0).\n      // More generally, we would need `surfacePosition - lightPosition`:\n      cosViewAngle = -Point3d.dotProduct(\n        surfaceNormal.normalize(),\n        surfacePosition.normalize()\n      );\n    } else {\n      cosViewAngle = surfaceNormal.z / surfaceNormal.length();\n    }\n    topSideVisible = cosViewAngle > 0;\n  }\n\n  if (topSideVisible || !this.showGrayBottom) {\n    const vAvg =\n      (point.point.value +\n        right.point.value +\n        top.point.value +\n        cross.point.value) /\n      4;\n    const ratio = (vAvg - this.valueRange.min) * this.scale.value;\n    // lighting factor. TODO: let user specify lighting model as function(?)\n    const v = this.showShadow ? (1 + cosViewAngle) / 2 : 1;\n    fillStyle = this._colormap(ratio, v);\n  } else {\n    fillStyle = \"gray\";\n  }\n\n  if (this.showSurfaceGrid) {\n    strokeStyle = this.axisColor; // TODO: should be customizable\n  } else {\n    strokeStyle = fillStyle;\n  }\n\n  ctx.lineWidth = this._getStrokeWidth(point);\n  // TODO: only draw stroke when strokeWidth > 0\n\n  const points = [point, right, cross, top];\n  this._polygon(ctx, points, fillStyle, strokeStyle);\n};\n\n/**\n * Helper method for _redrawGridGraphPoint()\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} from\n * @param {object} to\n * @private\n */\nGraph3d.prototype._drawGridLine = function (ctx, from, to) {\n  if (from === undefined || to === undefined) {\n    return;\n  }\n\n  const vAvg = (from.point.value + to.point.value) / 2;\n  const f = (vAvg - this.valueRange.min) * this.scale.value;\n\n  ctx.lineWidth = this._getStrokeWidth(from) * 2;\n  ctx.strokeStyle = this._colormap(f, 1);\n  this._line(ctx, from.screen, to.screen);\n};\n\n/**\n * Draw single datapoint for graph style 'Grid'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @private\n */\nGraph3d.prototype._redrawGridGraphPoint = function (ctx, point) {\n  this._drawGridLine(ctx, point, point.pointRight);\n  this._drawGridLine(ctx, point, point.pointTop);\n};\n\n/**\n * Draw single datapoint for graph style 'line'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @private\n */\nGraph3d.prototype._redrawLineGraphPoint = function (ctx, point) {\n  if (point.pointNext === undefined) {\n    return;\n  }\n\n  ctx.lineWidth = this._getStrokeWidth(point);\n  ctx.strokeStyle = this.dataColor.stroke;\n\n  this._line(ctx, point.screen, point.pointNext.screen);\n};\n\n/**\n * Draw all datapoints for currently selected graph style.\n *\n */\nGraph3d.prototype._redrawDataGraph = function () {\n  const ctx = this._getContext();\n  let i;\n\n  if (this.dataPoints === undefined || this.dataPoints.length <= 0) return; // TODO: throw exception?\n\n  this._calcTranslations(this.dataPoints);\n\n  for (i = 0; i < this.dataPoints.length; i++) {\n    const point = this.dataPoints[i];\n\n    // Using call() ensures that the correct context is used\n    this._pointDrawingMethod.call(this, ctx, point);\n  }\n};\n\n// -----------------------------------------------------------------------------\n// End methods for drawing points per graph style.\n// -----------------------------------------------------------------------------\n\n/**\n * Store startX, startY and startOffset for mouse operations\n *\n * @param {Event}     event     The event that occurred\n */\nGraph3d.prototype._storeMousePosition = function (event) {\n  // get mouse position (different code for IE and all other browsers)\n  this.startMouseX = getMouseX(event);\n  this.startMouseY = getMouseY(event);\n\n  this._startCameraOffset = this.camera.getOffset();\n};\n\n/**\n * Start a moving operation inside the provided parent element\n *\n * @param {Event}     event     The event that occurred (required for\n *                  retrieving the  mouse position)\n */\nGraph3d.prototype._onMouseDown = function (event) {\n  event = event || window.event;\n\n  // check if mouse is still down (may be up when focus is lost for example\n  // in an iframe)\n  if (this.leftButtonDown) {\n    this._onMouseUp(event);\n  }\n\n  // only react on left mouse button down\n  this.leftButtonDown = event.which ? event.which === 1 : event.button === 1;\n  if (!this.leftButtonDown && !this.touchDown) return;\n\n  this._storeMousePosition(event);\n\n  this.startStart = new Date(this.start);\n  this.startEnd = new Date(this.end);\n  this.startArmRotation = this.camera.getArmRotation();\n\n  this.frame.style.cursor = \"move\";\n\n  // add event listeners to handle moving the contents\n  // we store the function onmousemove and onmouseup in the graph, so we can\n  // remove the eventlisteners lateron in the function mouseUp()\n  const me = this;\n  this.onmousemove = function (event) {\n    me._onMouseMove(event);\n  };\n  this.onmouseup = function (event) {\n    me._onMouseUp(event);\n  };\n  util.addEventListener(document, \"mousemove\", me.onmousemove);\n  util.addEventListener(document, \"mouseup\", me.onmouseup);\n  util.preventDefault(event);\n};\n\n/**\n * Perform moving operating.\n * This function activated from within the funcion Graph.mouseDown().\n *\n * @param {Event}   event  Well, eehh, the event\n */\nGraph3d.prototype._onMouseMove = function (event) {\n  this.moving = true;\n  event = event || window.event;\n\n  // calculate change in mouse position\n  const diffX = parseFloat(getMouseX(event)) - this.startMouseX;\n  const diffY = parseFloat(getMouseY(event)) - this.startMouseY;\n\n  // move with ctrl or rotate by other\n  if (event && event.ctrlKey === true) {\n    // calculate change in mouse position\n    const scaleX = this.frame.clientWidth * 0.5;\n    const scaleY = this.frame.clientHeight * 0.5;\n\n    const offXNew =\n      (this._startCameraOffset.x || 0) -\n      (diffX / scaleX) * this.camera.armLength * 0.8;\n    const offYNew =\n      (this._startCameraOffset.y || 0) +\n      (diffY / scaleY) * this.camera.armLength * 0.8;\n\n    this.camera.setOffset(offXNew, offYNew);\n    this._storeMousePosition(event);\n  } else {\n    let horizontalNew = this.startArmRotation.horizontal + diffX / 200;\n    let verticalNew = this.startArmRotation.vertical + diffY / 200;\n\n    const snapAngle = 4; // degrees\n    const snapValue = Math.sin((snapAngle / 360) * 2 * Math.PI);\n\n    // snap horizontally to nice angles at 0pi, 0.5pi, 1pi, 1.5pi, etc...\n    // the -0.001 is to take care that the vertical axis is always drawn at the left front corner\n    if (Math.abs(Math.sin(horizontalNew)) < snapValue) {\n      horizontalNew = Math.round(horizontalNew / Math.PI) * Math.PI - 0.001;\n    }\n    if (Math.abs(Math.cos(horizontalNew)) < snapValue) {\n      horizontalNew =\n        (Math.round(horizontalNew / Math.PI - 0.5) + 0.5) * Math.PI - 0.001;\n    }\n\n    // snap vertically to nice angles\n    if (Math.abs(Math.sin(verticalNew)) < snapValue) {\n      verticalNew = Math.round(verticalNew / Math.PI) * Math.PI;\n    }\n    if (Math.abs(Math.cos(verticalNew)) < snapValue) {\n      verticalNew = (Math.round(verticalNew / Math.PI - 0.5) + 0.5) * Math.PI;\n    }\n    this.camera.setArmRotation(horizontalNew, verticalNew);\n  }\n\n  this.redraw();\n\n  // fire a cameraPositionChange event\n  const parameters = this.getCameraPosition();\n  this.emit(\"cameraPositionChange\", parameters);\n\n  util.preventDefault(event);\n};\n\n/**\n * Stop moving operating.\n * This function activated from within the funcion Graph.mouseDown().\n *\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onMouseUp = function (event) {\n  this.frame.style.cursor = \"auto\";\n  this.leftButtonDown = false;\n\n  // remove event listeners here\n  util.removeEventListener(document, \"mousemove\", this.onmousemove);\n  util.removeEventListener(document, \"mouseup\", this.onmouseup);\n  util.preventDefault(event);\n};\n\n/**\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onClick = function (event) {\n  // NOTE: onclick_callback is deprecated and may be removed in a future version.\n  if (!this.onclick_callback && !this.hasListeners(\"click\")) return;\n  if (!this.moving) {\n    const boundingRect = this.frame.getBoundingClientRect();\n    const mouseX = getMouseX(event) - boundingRect.left;\n    const mouseY = getMouseY(event) - boundingRect.top;\n    const dataPoint = this._dataPointFromXY(mouseX, mouseY);\n    if (dataPoint) {\n      if (this.onclick_callback) this.onclick_callback(dataPoint.point.data);\n      this.emit(\"click\", dataPoint.point.data);\n    }\n  } else {\n    // disable onclick callback, if it came immediately after rotate/pan\n    this.moving = false;\n  }\n  util.preventDefault(event);\n};\n\n/**\n * After having moved the mouse, a tooltip should pop up when the mouse is resting on a data point\n *\n * @param {Event}  event   A mouse move event\n */\nGraph3d.prototype._onTooltip = function (event) {\n  const delay = this.tooltipDelay; // ms\n  const boundingRect = this.frame.getBoundingClientRect();\n  const mouseX = getMouseX(event) - boundingRect.left;\n  const mouseY = getMouseY(event) - boundingRect.top;\n\n  if (!this.showTooltip) {\n    return;\n  }\n\n  if (this.tooltipTimeout) {\n    clearTimeout(this.tooltipTimeout);\n  }\n\n  // (delayed) display of a tooltip only if no mouse button is down\n  if (this.leftButtonDown) {\n    this._hideTooltip();\n    return;\n  }\n\n  if (this.tooltip && this.tooltip.dataPoint) {\n    // tooltip is currently visible\n    const dataPoint = this._dataPointFromXY(mouseX, mouseY);\n    if (dataPoint !== this.tooltip.dataPoint) {\n      // datapoint changed\n      if (dataPoint) {\n        this._showTooltip(dataPoint);\n      } else {\n        this._hideTooltip();\n      }\n    }\n  } else {\n    // tooltip is currently not visible\n    const me = this;\n    this.tooltipTimeout = setTimeout(function () {\n      me.tooltipTimeout = null;\n\n      // show a tooltip if we have a data point\n      const dataPoint = me._dataPointFromXY(mouseX, mouseY);\n      if (dataPoint) {\n        me._showTooltip(dataPoint);\n      }\n    }, delay);\n  }\n};\n\n/**\n * Event handler for touchstart event on mobile devices\n *\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onTouchStart = function (event) {\n  this.touchDown = true;\n\n  const me = this;\n  this.ontouchmove = function (event) {\n    me._onTouchMove(event);\n  };\n  this.ontouchend = function (event) {\n    me._onTouchEnd(event);\n  };\n  util.addEventListener(document, \"touchmove\", me.ontouchmove);\n  util.addEventListener(document, \"touchend\", me.ontouchend);\n\n  this._onMouseDown(event);\n};\n\n/**\n * Event handler for touchmove event on mobile devices\n *\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onTouchMove = function (event) {\n  this._onMouseMove(event);\n};\n\n/**\n * Event handler for touchend event on mobile devices\n *\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onTouchEnd = function (event) {\n  this.touchDown = false;\n\n  util.removeEventListener(document, \"touchmove\", this.ontouchmove);\n  util.removeEventListener(document, \"touchend\", this.ontouchend);\n\n  this._onMouseUp(event);\n};\n\n/**\n * Event handler for mouse wheel event, used to zoom the graph\n * Code from http://adomas.org/javascript-mouse-wheel/\n *\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onWheel = function (event) {\n  if (!event) /* For IE. */ event = window.event;\n  if (this.zoomable && (!this.ctrlToZoom || event.ctrlKey)) {\n    // retrieve delta\n    let delta = 0;\n    if (event.wheelDelta) {\n      /* IE/Opera. */\n      delta = event.wheelDelta / 120;\n    } else if (event.detail) {\n      /* Mozilla case. */\n      // In Mozilla, sign of delta is different than in IE.\n      // Also, delta is multiple of 3.\n      delta = -event.detail / 3;\n    }\n\n    // If delta is nonzero, handle it.\n    // Basically, delta is now positive if wheel was scrolled up,\n    // and negative, if wheel was scrolled down.\n    if (delta) {\n      const oldLength = this.camera.getArmLength();\n      const newLength = oldLength * (1 - delta / 10);\n\n      this.camera.setArmLength(newLength);\n      this.redraw();\n\n      this._hideTooltip();\n    }\n\n    // fire a cameraPositionChange event\n    const parameters = this.getCameraPosition();\n    this.emit(\"cameraPositionChange\", parameters);\n\n    // Prevent default actions caused by mouse wheel.\n    // That might be ugly, but we handle scrolls somehow\n    // anyway, so don't bother here..\n    util.preventDefault(event);\n  }\n};\n\n/**\n * Test whether a point lies inside given 2D triangle\n *\n * @param   {vis.Point2d}   point\n * @param   {vis.Point2d[]} triangle\n * @returns {boolean}   true if given point lies inside or on the edge of the\n *                      triangle, false otherwise\n * @private\n */\nGraph3d.prototype._insideTriangle = function (point, triangle) {\n  const a = triangle[0],\n    b = triangle[1],\n    c = triangle[2];\n\n  /**\n   *\n   * @param {number} x\n   * @returns {number}\n   */\n  function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  const as = sign(\n    (b.x - a.x) * (point.y - a.y) - (b.y - a.y) * (point.x - a.x)\n  );\n  const bs = sign(\n    (c.x - b.x) * (point.y - b.y) - (c.y - b.y) * (point.x - b.x)\n  );\n  const cs = sign(\n    (a.x - c.x) * (point.y - c.y) - (a.y - c.y) * (point.x - c.x)\n  );\n\n  // each of the three signs must be either equal to each other or zero\n  return (\n    (as == 0 || bs == 0 || as == bs) &&\n    (bs == 0 || cs == 0 || bs == cs) &&\n    (as == 0 || cs == 0 || as == cs)\n  );\n};\n\n/**\n * Find a data point close to given screen position (x, y)\n *\n * @param   {number} x\n * @param   {number} y\n * @returns {object | null} The closest data point or null if not close to any\n *                          data point\n * @private\n */\nGraph3d.prototype._dataPointFromXY = function (x, y) {\n  const distMax = 100; // px\n  const center = new Point2d(x, y);\n  let i,\n    dataPoint = null,\n    closestDataPoint = null,\n    closestDist = null;\n\n  if (\n    this.style === Graph3d.STYLE.BAR ||\n    this.style === Graph3d.STYLE.BARCOLOR ||\n    this.style === Graph3d.STYLE.BARSIZE\n  ) {\n    // the data points are ordered from far away to closest\n    for (i = this.dataPoints.length - 1; i >= 0; i--) {\n      dataPoint = this.dataPoints[i];\n      const surfaces = dataPoint.surfaces;\n      if (surfaces) {\n        for (let s = surfaces.length - 1; s >= 0; s--) {\n          // split each surface in two triangles, and see if the center point is inside one of these\n          const surface = surfaces[s];\n          const corners = surface.corners;\n          const triangle1 = [\n            corners[0].screen,\n            corners[1].screen,\n            corners[2].screen,\n          ];\n          const triangle2 = [\n            corners[2].screen,\n            corners[3].screen,\n            corners[0].screen,\n          ];\n          if (\n            this._insideTriangle(center, triangle1) ||\n            this._insideTriangle(center, triangle2)\n          ) {\n            // return immediately at the first hit\n            return dataPoint;\n          }\n        }\n      }\n    }\n  } else {\n    // find the closest data point, using distance to the center of the point on 2d screen\n    for (i = 0; i < this.dataPoints.length; i++) {\n      dataPoint = this.dataPoints[i];\n      const point = dataPoint.screen;\n      if (point) {\n        const distX = Math.abs(x - point.x);\n        const distY = Math.abs(y - point.y);\n        const dist = Math.sqrt(distX * distX + distY * distY);\n\n        if ((closestDist === null || dist < closestDist) && dist < distMax) {\n          closestDist = dist;\n          closestDataPoint = dataPoint;\n        }\n      }\n    }\n  }\n\n  return closestDataPoint;\n};\n\n/**\n * Determine if the given style has bars\n *\n * @param   {number} style the style to check\n * @returns {boolean} true if bar style, false otherwise\n */\nGraph3d.prototype.hasBars = function (style) {\n  return (\n    style == Graph3d.STYLE.BAR ||\n    style == Graph3d.STYLE.BARCOLOR ||\n    style == Graph3d.STYLE.BARSIZE\n  );\n};\n\n/**\n * Display a tooltip for given data point\n *\n * @param {object} dataPoint\n * @private\n */\nGraph3d.prototype._showTooltip = function (dataPoint) {\n  let content, line, dot;\n\n  if (!this.tooltip) {\n    content = document.createElement(\"div\");\n    Object.assign(content.style, {}, this.tooltipStyle.content);\n    content.style.position = \"absolute\";\n\n    line = document.createElement(\"div\");\n    Object.assign(line.style, {}, this.tooltipStyle.line);\n    line.style.position = \"absolute\";\n\n    dot = document.createElement(\"div\");\n    Object.assign(dot.style, {}, this.tooltipStyle.dot);\n    dot.style.position = \"absolute\";\n\n    this.tooltip = {\n      dataPoint: null,\n      dom: {\n        content: content,\n        line: line,\n        dot: dot,\n      },\n    };\n  } else {\n    content = this.tooltip.dom.content;\n    line = this.tooltip.dom.line;\n    dot = this.tooltip.dom.dot;\n  }\n\n  this._hideTooltip();\n\n  this.tooltip.dataPoint = dataPoint;\n  if (typeof this.showTooltip === \"function\") {\n    content.innerHTML = this.showTooltip(dataPoint.point);\n  } else {\n    content.innerHTML =\n      \"<table>\" +\n      \"<tr><td>\" +\n      this.xLabel +\n      \":</td><td>\" +\n      dataPoint.point.x +\n      \"</td></tr>\" +\n      \"<tr><td>\" +\n      this.yLabel +\n      \":</td><td>\" +\n      dataPoint.point.y +\n      \"</td></tr>\" +\n      \"<tr><td>\" +\n      this.zLabel +\n      \":</td><td>\" +\n      dataPoint.point.z +\n      \"</td></tr>\" +\n      \"</table>\";\n  }\n\n  content.style.left = \"0\";\n  content.style.top = \"0\";\n  this.frame.appendChild(content);\n  this.frame.appendChild(line);\n  this.frame.appendChild(dot);\n\n  // calculate sizes\n  const contentWidth = content.offsetWidth;\n  const contentHeight = content.offsetHeight;\n  const lineHeight = line.offsetHeight;\n  const dotWidth = dot.offsetWidth;\n  const dotHeight = dot.offsetHeight;\n\n  let left = dataPoint.screen.x - contentWidth / 2;\n  left = Math.min(\n    Math.max(left, 10),\n    this.frame.clientWidth - 10 - contentWidth\n  );\n\n  line.style.left = dataPoint.screen.x + \"px\";\n  line.style.top = dataPoint.screen.y - lineHeight + \"px\";\n  content.style.left = left + \"px\";\n  content.style.top = dataPoint.screen.y - lineHeight - contentHeight + \"px\";\n  dot.style.left = dataPoint.screen.x - dotWidth / 2 + \"px\";\n  dot.style.top = dataPoint.screen.y - dotHeight / 2 + \"px\";\n};\n\n/**\n * Hide the tooltip when displayed\n *\n * @private\n */\nGraph3d.prototype._hideTooltip = function () {\n  if (this.tooltip) {\n    this.tooltip.dataPoint = null;\n\n    for (const prop in this.tooltip.dom) {\n      if (Object.prototype.hasOwnProperty.call(this.tooltip.dom, prop)) {\n        const elem = this.tooltip.dom[prop];\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      }\n    }\n  }\n};\n\n/**--------------------------------------------------------------------------**/\n\n/**\n * Get the horizontal mouse position from a mouse event\n *\n * @param   {Event}  event\n * @returns {number} mouse x\n */\nfunction getMouseX(event) {\n  if (\"clientX\" in event) return event.clientX;\n  return (event.targetTouches[0] && event.targetTouches[0].clientX) || 0;\n}\n\n/**\n * Get the vertical mouse position from a mouse event\n *\n * @param   {Event}  event\n * @returns {number} mouse y\n */\nfunction getMouseY(event) {\n  if (\"clientY\" in event) return event.clientY;\n  return (event.targetTouches[0] && event.targetTouches[0].clientY) || 0;\n}\n\n// -----------------------------------------------------------------------------\n//  Public methods for specific settings\n// -----------------------------------------------------------------------------\n\n/**\n * Set the rotation and distance of the camera\n *\n * @param {object}  pos            An object with the camera position\n * @param {number} [pos.horizontal] The horizontal rotation, between 0 and 2*PI.\n *                                 Optional, can be left undefined.\n * @param {number} [pos.vertical]  The vertical rotation, between 0 and 0.5*PI.\n *                                 if vertical=0.5*PI, the graph is shown from\n *                                 the top. Optional, can be left undefined.\n * @param {number} [pos.distance]  The (normalized) distance of the camera to the\n *                                 center of the graph, a value between 0.71 and\n *                                 5.0. Optional, can be left undefined.\n */\nGraph3d.prototype.setCameraPosition = function (pos) {\n  setCameraPosition(pos, this);\n  this.redraw();\n};\n\n/**\n * Set a new size for the graph\n *\n * @param {string} width  Width in pixels or percentage (for example '800px'\n *                        or '50%')\n * @param {string} height Height in pixels or percentage  (for example '400px'\n *                        or '30%')\n */\nGraph3d.prototype.setSize = function (width, height) {\n  this._setSize(width, height);\n  this.redraw();\n};\n\n// -----------------------------------------------------------------------------\n//  End public methods for specific settings\n// -----------------------------------------------------------------------------\n\nexport default Graph3d;\n"],"names":["Point3d","x","y","z","this","undefined","subtract","a","b","sub","add","sum","avg","scalarProduct","p","c","dotProduct","crossProduct","crossproduct","prototype","length","Math","sqrt","normalize","Point3d_1","Point2d_1","Slider","container","options","Error","visible","frame","document","createElement","style","width","position","appendChild","prev","type","value","play","next","bar","border","height","borderRadius","MozBorderRadius","backgroundColor","slide","margin","left","me","onmousedown","event","_onMouseDown","onclick","togglePlay","onChangeCallback","values","index","playTimeout","playInterval","playLoop","StepNumber","start","end","step","prettyStep","_start","_end","_step","precision","_current","setRange","getIndex","setIndex","playNext","Date","diff","interval","max","setTimeout","stop","clearInterval","setOnChangeCallback","callback","setPlayInterval","getPlayInterval","setPlayLoop","doLoop","onChange","redraw","top","clientHeight","offsetHeight","clientWidth","indexToLeft","setValues","get","which","button","startClientX","clientX","startSlideX","parseFloat","cursor","onmousemove","_onMouseMove","onmouseup","_onMouseUp","util","addEventListener","preventDefault","leftToIndex","round","removeEventListener","isNumeric","n","isNaN","isFinite","setStep","calculatePrettyStep","log10","log","LN10","step1","pow","step2","step5","abs","getCurrent","toPrecision","getStep","checkFirst","StepNumber_1","Camera","armLocation","armRotation","horizontal","vertical","armLength","cameraOffset","offsetMultiplier","cameraLocation","cameraRotation","PI","calculateCameraOrientation","setOffset","sign","mul","getOffset","setArmLocation","setArmRotation","getArmRotation","rot","setArmLength","getArmLength","getCameraLocation","getCameraRotation","sin","cos","xa","za","dx","dy","STYLE","BAR","BARCOLOR","BARSIZE","DOT","DOTLINE","DOTCOLOR","DOTSIZE","GRID","LINE","SURFACE","STYLENAME","dot","line","grid","surface","OPTIONKEYS","PREFIXEDOPTIONKEYS","DEFAULTS","isEmpty","obj","prop","Object","hasOwnProperty","call","prefixFieldName","prefix","fieldName","str","charAt","toUpperCase","slice","forceCopy","src","dst","fields","srcKey","dstKey","i","safeCopy","setSpecialSettings","fill","stroke","strokeWidth","borderColor","borderWidth","borderStyle","setBackgroundColor","dataColor","setDataColor","styleNumber","styleName","number","getStyleNumberByName","valid","checkStyleNumber","setStyle","surfaceColors","console","warn","colormap","rgbColors","Array","isArray","parseColorArray","parseColorObject","hue","reverse","setSurfaceColor","setColormap","showLegend","isLegendGraphStyle","setShowLegend","setCameraPosition","cameraPosition","tooltip","showTooltip","onclick_callback","tooltipStyle","selectiveDeepExtend","map","colorCode","isValidHex","hexToRGB","hues","saturation","brightness","colorStops","hueStep","push","HSVToRGB","camPos","camera","distance","string","bool","object","colorOptions","__type__","allOptions","animationAutoStart","boolean","animationInterval","animationPreload","axisColor","axisFontSize","axisFontType","xBarWidth","yBarWidth","zoomable","ctrlToZoom","xCenter","yCenter","array","function","dotSizeMinFraction","dotSizeMaxFraction","dotSizeRatio","filterLabel","gridColor","keepAspectRatio","xLabel","yLabel","zLabel","legendLabel","xMin","yMin","zMin","xMax","yMax","zMax","showAnimationControls","showGrayBottom","showGrid","showPerspective","showShadow","showSurfaceGrid","showXAxis","showYAxis","showZAxis","rotateAxisLabels","xStep","yStep","zStep","tooltipDelay","content","color","background","boxShadow","padding","borderLeft","pointerEvents","xValueLabel","yValueLabel","zValueLabel","valueMax","valueMin","verticalRatio","Range","min","adjust","combine","range","expand","val","newMin","newMax","center","Range_1","Filter","dataGroup","column","graph","getDistinctValues","selectValue","dataPoints","loaded","onLoadCallback","loadInBackground","DataGroup","dataTable","isLoaded","getLoadedProgress","len","getLabel","getColumn","getSelectedValue","getValues","getValue","_getDataPoints","f","dataView","DataView","getDataSet","filter","item","setOnLoadCallback","progress","innerHTML","bottom","removeChild","initializeData","graph3d","rawData","data","DataSet","dataSet","off","_onChange","setData","on","colX","colY","colZ","withBars","hasBars","defaultXBarWidth","getSmallestDifference","defaultYBarWidth","_initializeRange","colValue","valueRange","getColumnRange","_setRangeDefaults","defaultValueMin","defaultValueMax","zRange","table","getDataTable","dataFilter","_collectRangeSettings","indexOf","upper","barWidth","range_label","step_label","settings","sort","smallest_diff","getNumberOfRows","defaultMin","defaultMax","getDataPoints","point","trans","screen","initDataAsMatrix","dataX","dataY","dataMatrix","xIndex","yIndex","pointRight","pointTop","pointCross","getInfo","reload","pointNext","Graph3d","SyntaxError","containerElement","create","eye","setDefaults","setOptions","getMouseX","targetTouches","getMouseY","clientY","v","Emitter","_setScale","scale","xRange","yRange","zCenter","_convert3Dto2D","point3d","translation","_convertPointToTranslation","_convertTranslationToScreen","ax","ay","az","cx","cy","cz","sinTx","cosTx","sinTy","cosTy","sinTz","cosTz","ex","ey","ez","dz","bx","by","Point2d","currentXCenter","canvas","currentYCenter","_calcTranslations","points","transBottom","dist","_initializeRanges","dg","hasChildNodes","firstChild","overflow","noCanvas","fontWeight","_onTouchStart","_onWheel","_onTooltip","_onClick","_setSize","_resizeCanvas","animationStart","slider","animationStop","_resizeCenter","getCameraPosition","pos","_readData","_redrawFilter","Validator","validate","error","VALIDATOR_PRINT_STYLE","setPointDrawingMethod","setAxisLabelMethod","method","_redrawBarGraphPoint","_redrawBarColorGraphPoint","_redrawBarSizeGraphPoint","_redrawDotGraphPoint","_redrawDotLineGraphPoint","_redrawDotColorGraphPoint","_redrawDotSizeGraphPoint","_redrawSurfaceGraphPoint","_redrawGridGraphPoint","_redrawLineGraphPoint","_pointDrawingMethod","_drawAxisLabelX","drawAxisLabelXRotate","_drawAxisLabelY","drawAxisLabelYRotate","_drawAxisLabelZ","drawAxisLabelZRotate","drawAxisLabelX","drawAxisLabelY","drawAxisLabelZ","_redrawSlider","_redrawClear","_redrawAxis","_redrawDataGraph","_redrawInfo","_redrawLegend","_getContext","ctx","getContext","lineJoin","lineCap","clearRect","_dotSize","_getLegendWidth","isSizeLegend","isValueLegend","right","lineWidth","font","ymin","ymax","_colormap","strokeStyle","beginPath","moveTo","lineTo","strokeRect","widthMin","fillStyle","closePath","legendMin","legendMax","from","to","_line","textAlign","textBaseline","fillText","label","info","lineStyle","text","armAngle","yMargin","point2d","offset","save","translate","rotate","restore","_line3d","from2d","to2d","xText","yText","zText","xOffset","yOffset","gridLenX","gridLenY","textMargin","armVector","defaultXStep","msg","defaultYStep","defaultZStep","from3d","xMin2d","xMax2d","_getStrokeWidth","_redrawBar","xWidth","yWidth","forEach","surfaces","corners","j","transCenter","_polygon","_drawCircle","size","radius","_calcRadius","arc","_getColorsRegular","_getColorsColor","pointStyle","_getColorsSize","r","g","maxIndex","startIndex","floor","endIndex","innerRatio","Number","colors","fraction","dotSize","sizeMin","cross","cosViewAngle","topSideVisible","aDiff","bDiff","surfaceNormal","surfacePosition","ratio","_drawGridLine","_storeMousePosition","startMouseX","startMouseY","_startCameraOffset","window","leftButtonDown","touchDown","startStart","startEnd","startArmRotation","moving","diffX","diffY","ctrlKey","scaleX","scaleY","offXNew","offYNew","horizontalNew","verticalNew","snapAngle","snapValue","parameters","emit","hasListeners","boundingRect","getBoundingClientRect","mouseX","mouseY","dataPoint","_dataPointFromXY","delay","tooltipTimeout","clearTimeout","_hideTooltip","_showTooltip","ontouchmove","_onTouchMove","ontouchend","_onTouchEnd","delta","wheelDelta","detail","newLength","_insideTriangle","triangle","as","bs","cs","closestDataPoint","closestDist","s","triangle1","triangle2","distX","distY","dom","assign","contentWidth","offsetWidth","contentHeight","lineHeight","dotWidth","dotHeight","elem","parentNode","setSize"],"mappings":"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"}